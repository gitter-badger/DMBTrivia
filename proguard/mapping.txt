android.support.v4.app.BackStackRecord -> android.support.v4.app.a:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace$324a6018(android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> b
    void run() -> run
    void popFromBackStack(boolean) -> a
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.b:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.c:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.d:
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mViewDestroyed -> g
    boolean mDismissed -> h
    boolean mShownByMe -> i
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> a
    void onAttach(android.app.Activity) -> a
    void onDetach() -> a
    void onCreate(android.os.Bundle) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    android.app.Dialog onCreateDialog$5709b310() -> b
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> c
    void onStart() -> c
    void onSaveInstanceState(android.os.Bundle) -> d
    void onStop() -> d
    void onDestroyView() -> e
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> a
    int mState -> j
    android.view.View mAnimatingAway -> k
    int mStateAfterAnimating -> l
    android.os.Bundle mSavedFragmentState -> m
    android.util.SparseArray mSavedViewState -> n
    int mIndex -> o
    java.lang.String mWho -> p
    android.os.Bundle mArguments -> q
    android.support.v4.app.Fragment mTarget -> r
    int mTargetIndex -> s
    int mTargetRequestCode -> t
    boolean mAdded -> u
    boolean mRemoving -> v
    boolean mResumed -> w
    boolean mFromLayout -> x
    boolean mInLayout -> y
    boolean mRestored -> z
    int mBackStackNesting -> A
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> B
    android.support.v4.app.FragmentActivity mActivity -> C
    int mFragmentId -> D
    int mContainerId -> E
    java.lang.String mTag -> F
    boolean mHidden -> G
    boolean mDetached -> H
    boolean mRetainInstance -> I
    boolean mRetaining -> J
    boolean mHasMenu -> K
    boolean mMenuVisible -> L
    boolean mCalled -> M
    int mNextAnim -> N
    android.view.ViewGroup mContainer -> O
    android.view.View mView -> P
    android.view.View mInnerView -> Q
    boolean mDeferStart -> R
    boolean mUserVisibleHint -> S
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> T
    boolean mLoadersStarted -> U
    boolean mCheckedForLoaderManager -> V
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState() -> f
    void setIndex(int) -> a
    boolean isInBackStack() -> g
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> h
    android.content.res.Resources getResources() -> i
    java.lang.String getString(int) -> b
    void onHiddenChanged$1385ff() -> j
    void setHasOptionsMenu(boolean) -> a
    void startActivity(android.content.Intent) -> a
    void startActivityForResult(android.content.Intent,int) -> a
    void onActivityResult$6eb84b52() -> k
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate$423a76cd() -> l
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation$24236ca7() -> m
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated$65f1d89() -> n
    void onActivityCreated(android.os.Bundle) -> c
    void onStart() -> c
    void onResume() -> o
    void onSaveInstanceState(android.os.Bundle) -> d
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> p
    void onStop() -> d
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> e
    void onDestroy() -> q
    void initState() -> r
    void onDetach() -> a
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> s
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed$1eec55bd() -> t
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected$1b88ab4c() -> u
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
    void performStart() -> v
    void performStop() -> w
    void performReallyStop() -> x
    void performDestroyView() -> y
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.e:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.f:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.g:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    boolean mCreated -> c
    boolean mResumed -> d
    boolean mStopped -> e
    boolean mReallyStopped -> f
    boolean mRetaining -> g
    boolean mOptionsMenuInvalidated -> h
    boolean mCheckedForLoaderManager -> i
    boolean mLoadersStarted -> j
    android.support.v4.util.SparseArrayCompat mAllLoaderManagers -> k
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> l
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void supportInvalidateOptionsMenu() -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void doReallyStop(boolean) -> a
    void onAttachFragment$65850823() -> c
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragmentIndex(int) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager$3d2266e4(int) -> b
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.h:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SparseArrayCompat loaders -> e
android.support.v4.app.FragmentManager -> android.support.v4.app.k:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void popBackStack$255f295(int) -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.l:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    boolean mNeedMenuInvalidate -> p
    boolean mStateSaved -> q
    boolean mDestroyed -> r
    java.lang.String mNoTransactionsBecause -> s
    boolean mHavePendingDeferredStart -> t
    android.os.Bundle mStateBundle -> u
    android.util.SparseArray mStateArray -> v
    java.lang.Runnable mExecCommit -> w
    android.view.animation.Interpolator DECELERATE_QUINT -> x
    android.view.animation.Interpolator DECELERATE_CUBIC -> y
    android.view.animation.Interpolator ACCELERATE_QUINT -> z
    android.view.animation.Interpolator ACCELERATE_CUBIC -> A
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void popBackStack$255f295(int) -> a
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter) -> a
    android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> a
    void moveToState$2563266(int) -> e
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> s
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> c
    boolean execPendingActions() -> d
    void reportBackStackChanged() -> u
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState$68507953$44bd8ea3(int,int) -> a
    java.util.ArrayList retainNonConfig() -> e
    void saveFragmentViewState(android.support.v4.app.Fragment) -> b
    android.os.Parcelable saveAllState() -> f
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity) -> a
    void noteStateNotSaved() -> g
    void dispatchCreate() -> h
    void dispatchActivityCreated() -> i
    void dispatchStart() -> j
    void dispatchResume() -> k
    void dispatchPause() -> l
    void dispatchStop() -> m
    void dispatchReallyStop() -> n
    void dispatchDestroy() -> o
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> p
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected$1b88ab4c() -> q
    void dispatchOptionsMenuClosed$1eec55bd() -> r
    int reverseTransit(int) -> d
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.m:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.n:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.o:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.p:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.q:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTransaction -> android.support.v4.app.r:
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace$324a6018(android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.LoaderManager -> android.support.v4.app.s:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.t:
    android.support.v4.content.Loader onCreateLoader$e57f803() -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.u:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    android.support.v4.app.FragmentActivity mActivity -> d
    boolean mStarted -> e
    boolean mRetaining -> f
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.v:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void stop() -> a
    void destroy() -> b
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.w:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.x:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.y:
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.z:
    android.graphics.Bitmap mPicture -> a
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.aa:
    java.lang.CharSequence mBigText -> a
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.ab:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.util.ArrayList mActions -> q
    android.app.Notification mNotification -> r
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.ac:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.ad:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.ae:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.af:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.ag:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.ah:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.ai:
    java.lang.CharSequence mBigContentTitle -> b
    java.lang.CharSequence mSummaryText -> c
    boolean mSummaryTextSet -> d
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.aj:
    android.app.Notification$Builder b -> a
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ak:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    java.lang.String toString() -> toString
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.content.LocalBroadcastManager -> android.support.v4.a.c:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> a
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> a
    void unregisterReceiver(android.content.BroadcastReceiver) -> a
    boolean sendBroadcast(android.content.Intent) -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.a.d:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.a.e:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.a.f:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    void remove(int) -> b
    void removeAt(int) -> c
    void gc() -> c
    int size() -> a
    int keyAt(int) -> d
    java.lang.Object valueAt(int) -> e
    void clear() -> b
    int binarySearch$76412d8d(int[],int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers$79c6ddc0(android.view.KeyEvent) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers$2e71581f(int,int,int,int) -> a
    int normalizeMetaState(int) -> c
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.e:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.f:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.i:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void destroyItem$30510aeb() -> b
    boolean isViewFromObject$171eb1dd() -> c
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.j:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.k:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.l:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.n:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.o:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    long getFrameTime() -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.p:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.q:
    long getFrameTime() -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.s:
    void postInvalidateOnAnimation(android.view.View) -> b
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.t:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mInitialMotionX -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    boolean mFakeDragging -> N
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> O
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> P
    boolean mFirstLayout -> Q
    boolean mNeedCalculatePageOffsets -> R
    boolean mCalledSuper -> S
    int mDecorChildCount -> T
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> V
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> W
    int mScrollState -> Z
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem$2563266(int) -> setCurrentItem$2563266
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    android.support.v4.view.ViewPager$ItemInfo addNewItem$3af7e890(int) -> a
    void dataSetChanged() -> a
    void populate() -> c
    void populate(int) -> b
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild$31e08638() -> d
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled$134632() -> e
    void onPageScrolled$486775f1() -> f
    void completeScroll() -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> d
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> j
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$300() -> b
android.support.v4.view.ViewPager$1 -> android.support.v4.view.u:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.v:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.w:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.x:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.y:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.z:
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.aa:
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ab:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ac:
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.facebook.AccessToken -> com.facebook.a:
    java.util.Date MIN_DATE -> b
    java.util.Date MAX_DATE -> c
    java.util.Date DEFAULT_EXPIRATION_TIME -> d
    java.util.Date DEFAULT_LAST_REFRESH_TIME -> e
    com.facebook.AccessTokenSource DEFAULT_ACCESS_TOKEN_SOURCE -> f
    java.util.Date ALREADY_EXPIRED_EXPIRATION_TIME -> g
    java.util.Date expires -> h
    java.util.List permissions -> i
    java.lang.String token -> j
    com.facebook.AccessTokenSource source -> k
    java.util.Date lastRefresh -> l
    boolean $assertionsDisabled -> a
    java.lang.String getToken() -> a
    java.util.Date getExpires() -> b
    java.util.List getPermissions() -> c
    com.facebook.AccessTokenSource getSource() -> d
    java.util.Date getLastRefresh() -> e
    java.lang.String toString() -> toString
    com.facebook.AccessToken createEmptyToken(java.util.List) -> a
    com.facebook.AccessToken createFromNativeLogin(android.os.Bundle,com.facebook.AccessTokenSource) -> a
    com.facebook.AccessToken createFromWebBundle(java.util.List,android.os.Bundle,com.facebook.AccessTokenSource) -> a
    com.facebook.AccessToken createFromRefresh(com.facebook.AccessToken,android.os.Bundle) -> a
    com.facebook.AccessToken createFromTokenWithRefreshedPermissions(com.facebook.AccessToken,java.util.List) -> a
    com.facebook.AccessToken createNew(java.util.List,java.lang.String,java.util.Date,com.facebook.AccessTokenSource) -> a
    com.facebook.AccessToken createFromCache(android.os.Bundle) -> a
    android.os.Bundle toCacheBundle() -> f
    boolean isInvalid() -> g
    java.util.Date getBundleLongAsDate(android.os.Bundle,java.lang.String,java.util.Date) -> a
com.facebook.AccessTokenSource -> com.facebook.b:
    com.facebook.AccessTokenSource NONE -> a
    com.facebook.AccessTokenSource FACEBOOK_APPLICATION_WEB -> b
    com.facebook.AccessTokenSource FACEBOOK_APPLICATION_NATIVE -> c
    com.facebook.AccessTokenSource FACEBOOK_APPLICATION_SERVICE -> d
    com.facebook.AccessTokenSource WEB_VIEW -> e
    com.facebook.AccessTokenSource TEST_USER -> f
    boolean canExtendToken -> g
    com.facebook.AccessTokenSource[] ENUM$VALUES -> h
    boolean canExtendToken() -> a
    com.facebook.AccessTokenSource[] values() -> values
    com.facebook.AccessTokenSource valueOf(java.lang.String) -> valueOf
com.facebook.AuthorizationClient -> com.facebook.c:
    java.util.List handlersToTry -> a
    com.facebook.AuthorizationClient$AuthHandler currentHandler -> b
    android.content.Context context -> c
    com.facebook.AuthorizationClient$StartActivityDelegate startActivityDelegate -> d
    com.facebook.AuthorizationClient$OnCompletedListener onCompletedListener -> e
    com.facebook.AuthorizationClient$BackgroundProcessingListener backgroundProcessingListener -> f
    boolean checkedInternetPermission -> g
    com.facebook.AuthorizationClient$AuthorizationRequest pendingRequest -> h
    void setContext(android.app.Activity) -> a
    void startOrContinueAuth(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    void cancelCurrentHandler() -> a
    boolean onActivityResult(int,int,android.content.Intent) -> a
    boolean checkInternetPermission() -> e
    void tryNextHandler() -> b
    boolean tryCurrentHandler() -> f
    void completeAndValidate(com.facebook.AuthorizationClient$Result) -> a
    void complete(com.facebook.AuthorizationClient$Result) -> b
    void setOnCompletedListener(com.facebook.AuthorizationClient$OnCompletedListener) -> a
    void setBackgroundProcessingListener(com.facebook.AuthorizationClient$BackgroundProcessingListener) -> a
    com.facebook.AuthorizationClient$StartActivityDelegate getStartActivityDelegate() -> c
    com.facebook.Request createGetProfileIdRequest(java.lang.String) -> a
    void notifyBackgroundProcessingStart() -> d
    void access$1(com.facebook.AuthorizationClient) -> a
com.facebook.AuthorizationClient$1 -> com.facebook.d:
    com.facebook.AuthorizationClient this$0 -> a
    android.app.Activity val$activity -> b
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.AuthorizationClient$2 -> com.facebook.e:
    com.facebook.AuthorizationClient this$0 -> a
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.AuthorizationClient$3 -> com.facebook.f:
    com.facebook.AuthorizationClient this$0 -> a
    java.util.ArrayList val$fbids -> b
    void onCompleted(com.facebook.Response) -> a
com.facebook.AuthorizationClient$4 -> com.facebook.g:
    com.facebook.AuthorizationClient this$0 -> a
    java.util.ArrayList val$tokenPermissions -> b
    void onCompleted(com.facebook.Response) -> a
com.facebook.AuthorizationClient$5 -> com.facebook.h:
    com.facebook.AuthorizationClient this$0 -> a
    java.util.ArrayList val$fbids -> b
    com.facebook.AuthorizationClient$Result val$pendingResult -> c
    java.util.ArrayList val$tokenPermissions -> d
    void onBatchCompleted$1a556f86() -> a
com.facebook.AuthorizationClient$AuthDialogBuilder -> com.facebook.i:
    com.facebook.widget.WebDialog build() -> a
com.facebook.AuthorizationClient$AuthHandler -> com.facebook.j:
    com.facebook.AuthorizationClient this$0 -> a
    boolean tryAuthorize(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    boolean onActivityResult$6eb84b56(int,android.content.Intent) -> a
    boolean needsRestart() -> a
    boolean needsInternetPermission() -> b
    void cancel() -> c
com.facebook.AuthorizationClient$AuthorizationRequest -> com.facebook.k:
    com.facebook.AuthorizationClient$StartActivityDelegate startActivityDelegate -> h
    com.facebook.SessionLoginBehavior loginBehavior -> a
    int requestCode -> b
    boolean isLegacy -> c
    java.util.List permissions -> d
    com.facebook.SessionDefaultAudience defaultAudience -> e
    java.lang.String applicationId -> f
    java.lang.String previousAccessToken -> g
    com.facebook.AuthorizationClient$StartActivityDelegate getStartActivityDelegate() -> a
    boolean needsNewTokenValidation() -> b
com.facebook.AuthorizationClient$BackgroundProcessingListener -> com.facebook.l:
    void onBackgroundProcessingStarted() -> a
    void onBackgroundProcessingStopped() -> b
com.facebook.AuthorizationClient$GetTokenAuthHandler -> com.facebook.m:
    com.facebook.GetTokenClient getTokenClient -> c
    com.facebook.AuthorizationClient this$0 -> b
    void cancel() -> c
    boolean tryAuthorize(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    void getTokenCompleted(com.facebook.AuthorizationClient$AuthorizationRequest,android.os.Bundle) -> a
com.facebook.AuthorizationClient$GetTokenAuthHandler$1 -> com.facebook.n:
    com.facebook.AuthorizationClient$GetTokenAuthHandler this$1 -> a
    com.facebook.AuthorizationClient$AuthorizationRequest val$request -> b
    void completed(android.os.Bundle) -> a
com.facebook.AuthorizationClient$KatanaAuthHandler -> com.facebook.o:
    com.facebook.AuthorizationClient this$0 -> b
    boolean tryIntent(android.content.Intent,int) -> a
com.facebook.AuthorizationClient$KatanaLoginDialogAuthHandler -> com.facebook.p:
    com.facebook.AuthorizationClient this$0 -> c
    boolean tryAuthorize(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    boolean onActivityResult$6eb84b56(int,android.content.Intent) -> a
com.facebook.AuthorizationClient$KatanaProxyAuthHandler -> com.facebook.q:
    com.facebook.AuthorizationClient this$0 -> c
    boolean tryAuthorize(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    boolean onActivityResult$6eb84b56(int,android.content.Intent) -> a
com.facebook.AuthorizationClient$OnCompletedListener -> com.facebook.r:
    void onCompleted(com.facebook.AuthorizationClient$Result) -> a
com.facebook.AuthorizationClient$Result -> com.facebook.s:
    com.facebook.AuthorizationClient$Result$Code code -> a
    com.facebook.AccessToken token -> b
    java.lang.String errorMessage -> c
    com.facebook.AuthorizationClient$Result createTokenResult(com.facebook.AccessToken) -> a
    com.facebook.AuthorizationClient$Result createCancelResult(java.lang.String) -> a
    com.facebook.AuthorizationClient$Result createErrorResult(java.lang.String,java.lang.String) -> a
com.facebook.AuthorizationClient$Result$Code -> com.facebook.t:
    com.facebook.AuthorizationClient$Result$Code SUCCESS -> a
    com.facebook.AuthorizationClient$Result$Code CANCEL -> b
    com.facebook.AuthorizationClient$Result$Code ERROR -> c
    com.facebook.AuthorizationClient$Result$Code[] ENUM$VALUES -> d
    com.facebook.AuthorizationClient$Result$Code[] values() -> values
    com.facebook.AuthorizationClient$Result$Code valueOf(java.lang.String) -> valueOf
com.facebook.AuthorizationClient$StartActivityDelegate -> com.facebook.u:
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.AuthorizationClient$WebViewAuthHandler -> com.facebook.v:
    com.facebook.widget.WebDialog loginDialog -> c
    com.facebook.AuthorizationClient this$0 -> b
    boolean needsRestart() -> a
    boolean needsInternetPermission() -> b
    void cancel() -> c
    boolean tryAuthorize(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    void onWebDialogComplete(com.facebook.AuthorizationClient$AuthorizationRequest,android.os.Bundle,com.facebook.FacebookException) -> a
com.facebook.AuthorizationClient$WebViewAuthHandler$1 -> com.facebook.w:
    com.facebook.AuthorizationClient$WebViewAuthHandler this$1 -> a
    com.facebook.AuthorizationClient$AuthorizationRequest val$request -> b
    void onComplete(android.os.Bundle,com.facebook.FacebookException) -> a
com.facebook.FacebookAuthorizationException -> com.facebook.x:
com.facebook.FacebookDialogException -> com.facebook.y:
    int errorCode -> a
    java.lang.String failingUrl -> b
com.facebook.FacebookException -> com.facebook.z:
com.facebook.FacebookGraphObjectException -> com.facebook.aa:
com.facebook.FacebookOperationCanceledException -> com.facebook.ab:
com.facebook.FacebookRequestError -> com.facebook.ac:
    com.facebook.FacebookRequestError$Range EC_RANGE_PERMISSION -> a
    com.facebook.FacebookRequestError$Range HTTP_RANGE_SUCCESS -> b
    com.facebook.FacebookRequestError$Range HTTP_RANGE_CLIENT_ERROR -> c
    com.facebook.FacebookRequestError$Range HTTP_RANGE_SERVER_ERROR -> d
    int userActionMessageId -> e
    boolean shouldNotifyUser -> f
    com.facebook.FacebookRequestError$Category category -> g
    int requestStatusCode -> h
    int errorCode -> i
    int subErrorCode -> j
    java.lang.String errorType -> k
    java.lang.String errorMessage -> l
    org.json.JSONObject requestResult -> m
    org.json.JSONObject requestResultBody -> n
    java.lang.Object batchRequestResult -> o
    java.net.HttpURLConnection connection -> p
    com.facebook.FacebookException exception -> q
    int getRequestStatusCode() -> a
    int getErrorCode() -> b
    java.lang.String getErrorType() -> c
    java.lang.String getErrorMessage() -> d
    com.facebook.FacebookException getException() -> e
    java.lang.String toString() -> toString
    com.facebook.FacebookRequestError checkResponseAndCreateError(org.json.JSONObject,java.lang.Object,java.net.HttpURLConnection) -> a
com.facebook.FacebookRequestError$Category -> com.facebook.ad:
    com.facebook.FacebookRequestError$Category AUTHENTICATION_RETRY -> a
    com.facebook.FacebookRequestError$Category AUTHENTICATION_REOPEN_SESSION -> b
    com.facebook.FacebookRequestError$Category PERMISSION -> c
    com.facebook.FacebookRequestError$Category SERVER -> d
    com.facebook.FacebookRequestError$Category THROTTLING -> e
    com.facebook.FacebookRequestError$Category OTHER -> f
    com.facebook.FacebookRequestError$Category BAD_REQUEST -> g
    com.facebook.FacebookRequestError$Category CLIENT -> h
    com.facebook.FacebookRequestError$Category[] ENUM$VALUES -> i
    com.facebook.FacebookRequestError$Category[] values() -> values
    com.facebook.FacebookRequestError$Category valueOf(java.lang.String) -> valueOf
com.facebook.FacebookRequestError$Range -> com.facebook.ae:
    int start -> a
    int end -> b
    boolean contains(int) -> a
com.facebook.FacebookServiceException -> com.facebook.af:
    com.facebook.FacebookRequestError error -> a
    java.lang.String toString() -> toString
com.facebook.GetTokenClient -> com.facebook.ag:
    android.content.Context context -> a
    java.lang.String applicationId -> b
    android.os.Handler handler -> c
    com.facebook.GetTokenClient$CompletedListener listener -> d
    boolean running -> e
    android.os.Messenger sender -> f
    void setCompletedListener(com.facebook.GetTokenClient$CompletedListener) -> a
    boolean start() -> a
    void cancel() -> b
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void callback(android.os.Bundle) -> a
    void access$0(com.facebook.GetTokenClient,android.os.Message) -> a
com.facebook.GetTokenClient$1 -> com.facebook.ah:
    com.facebook.GetTokenClient this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.facebook.GetTokenClient$CompletedListener -> com.facebook.ai:
    void completed(android.os.Bundle) -> a
com.facebook.HttpMethod -> com.facebook.aj:
    com.facebook.HttpMethod GET -> a
    com.facebook.HttpMethod POST -> b
    com.facebook.HttpMethod DELETE -> c
    com.facebook.HttpMethod[] ENUM$VALUES -> d
    com.facebook.HttpMethod[] values() -> values
    com.facebook.HttpMethod valueOf(java.lang.String) -> valueOf
com.facebook.LoggingBehavior -> com.facebook.ak:
    com.facebook.LoggingBehavior REQUESTS -> a
    com.facebook.LoggingBehavior INCLUDE_ACCESS_TOKENS -> b
    com.facebook.LoggingBehavior INCLUDE_RAW_RESPONSES -> c
    com.facebook.LoggingBehavior CACHE -> d
    com.facebook.LoggingBehavior[] ENUM$VALUES -> e
    com.facebook.LoggingBehavior[] values() -> values
    com.facebook.LoggingBehavior valueOf(java.lang.String) -> valueOf
com.facebook.LoginActivity -> com.facebook.LoginActivity:
    java.lang.String callingPackage -> a
    com.facebook.AuthorizationClient authorizationClient -> b
    com.facebook.AuthorizationClient$AuthorizationRequest request -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.os.Bundle populateIntentExtras(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    void access$0(com.facebook.LoginActivity,com.facebook.AuthorizationClient$Result) -> a
com.facebook.LoginActivity$1 -> com.facebook.al:
    com.facebook.LoginActivity this$0 -> a
    void onCompleted(com.facebook.AuthorizationClient$Result) -> a
com.facebook.LoginActivity$2 -> com.facebook.am:
    com.facebook.LoginActivity this$0 -> a
    void onBackgroundProcessingStarted() -> a
    void onBackgroundProcessingStopped() -> b
com.facebook.NativeProtocol -> com.facebook.an:
    boolean validateSignature(android.content.Context,java.lang.String) -> a
    android.content.Intent validateKatanaActivityIntent(android.content.Context,android.content.Intent) -> a
    android.content.Intent validateKatanaServiceIntent(android.content.Context,android.content.Intent) -> b
    java.util.ArrayList ensureDefaultPermissions(java.util.ArrayList) -> a
com.facebook.Request -> com.facebook.ao:
    java.lang.String defaultBatchApplicationId -> e
    com.facebook.Session session -> a
    com.facebook.HttpMethod httpMethod -> f
    java.lang.String graphPath -> g
    com.facebook.model.GraphObject graphObject -> b
    java.lang.String restMethod -> h
    java.lang.String batchEntryName -> i
    java.lang.String batchEntryDependsOn -> j
    boolean batchEntryOmitResultOnSuccess -> k
    android.os.Bundle parameters -> c
    com.facebook.Request$Callback callback -> d
    java.lang.String overriddenURL -> l
    java.lang.String userAgent -> m
    com.facebook.Request newGraphPathRequest(com.facebook.Session,java.lang.String,com.facebook.Request$Callback) -> a
    android.os.Bundle getParameters() -> a
    com.facebook.Response executeAndWait() -> b
    com.facebook.RequestAsyncTask executeAsync() -> c
    java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch) -> c
    java.util.List executeBatchAndWait(com.facebook.RequestBatch) -> a
    com.facebook.RequestAsyncTask executeBatchAsync(com.facebook.Request[]) -> a
    com.facebook.RequestAsyncTask executeBatchAsync(com.facebook.RequestBatch) -> b
    java.util.List executeConnectionAndWait(java.net.HttpURLConnection,com.facebook.RequestBatch) -> a
    java.lang.String toString() -> toString
    void runCallbacks(com.facebook.RequestBatch,java.util.List) -> a
    void addCommonParameters() -> e
    java.lang.String appendParametersToBaseUrl(java.lang.String) -> a
    java.lang.String getUrlForSingleRequest() -> d
    void serializeToBatch(org.json.JSONArray,android.os.Bundle) -> a
    void processGraphObject(com.facebook.model.GraphObject,java.lang.String,com.facebook.Request$KeyValueSerializer) -> a
    void processGraphObjectProperty(java.lang.String,java.lang.Object,com.facebook.Request$KeyValueSerializer,boolean) -> a
    void serializeParameters(android.os.Bundle,com.facebook.Request$Serializer) -> a
    void serializeAttachments(android.os.Bundle,com.facebook.Request$Serializer) -> b
    void serializeRequestsAsJSON(com.facebook.Request$Serializer,java.util.Collection,android.os.Bundle) -> a
    java.lang.String getBatchAppId(com.facebook.RequestBatch) -> d
    boolean isSupportedAttachmentType(java.lang.Object) -> c
    boolean isSupportedParameterType(java.lang.Object) -> a
    java.lang.String parameterToString(java.lang.Object) -> b
com.facebook.Request$1 -> com.facebook.ap:
    com.facebook.Request$GraphUserCallback val$callback -> a
    void onCompleted(com.facebook.Response) -> a
com.facebook.Request$4 -> com.facebook.aq:
    java.util.ArrayList val$callbacks -> a
    com.facebook.RequestBatch val$requests -> b
    void run() -> run
com.facebook.Request$5 -> com.facebook.ar:
    com.facebook.Request this$0 -> a
    java.util.ArrayList val$keysAndValues -> b
    void writeString(java.lang.String,java.lang.String) -> a
com.facebook.Request$Callback -> com.facebook.as:
    void onCompleted(com.facebook.Response) -> a
com.facebook.Request$GraphUserCallback -> com.facebook.at:
    void onCompleted(com.facebook.model.GraphUser,com.facebook.Response) -> a
com.facebook.Request$KeyValueSerializer -> com.facebook.au:
    void writeString(java.lang.String,java.lang.String) -> a
com.facebook.Request$Serializer -> com.facebook.av:
    java.io.BufferedOutputStream outputStream -> a
    com.facebook.internal.Logger logger -> b
    boolean firstWrite -> c
    void writeObject(java.lang.String,java.lang.Object) -> a
    void writeString(java.lang.String,java.lang.String) -> a
    void writeFile(java.lang.String,android.os.ParcelFileDescriptor) -> a
    void writeRecordBoundary() -> a
    void writeContentDisposition(java.lang.String,java.lang.String,java.lang.String) -> a
    void write(java.lang.String,java.lang.Object[]) -> a
    void writeLine(java.lang.String,java.lang.Object[]) -> b
com.facebook.RequestAsyncTask -> com.facebook.aw:
    java.lang.String TAG -> a
    java.lang.reflect.Method executeOnExecutorMethod -> b
    java.net.HttpURLConnection connection -> c
    com.facebook.RequestBatch requests -> d
    java.lang.Exception exception -> e
    java.lang.String toString() -> toString
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground$68cf9880() -> b
    com.facebook.RequestAsyncTask executeOnSettingsExecutor() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.facebook.RequestBatch -> com.facebook.ax:
    java.util.concurrent.atomic.AtomicInteger idGenerator -> a
    android.os.Handler callbackHandler -> b
    java.util.List requests -> c
    int timeoutInMilliseconds -> d
    java.lang.String id -> e
    java.util.List callbacks -> f
    java.lang.String batchApplicationId -> g
    int getTimeout() -> a
    void addCallback(com.facebook.RequestBatch$Callback) -> a
    void clear() -> clear
    com.facebook.Request get(int) -> a
    int size() -> size
    java.lang.String getId() -> b
    android.os.Handler getCallbackHandler() -> c
    void setCallbackHandler(android.os.Handler) -> a
    java.util.List getRequests() -> d
    java.util.List getCallbacks() -> e
    java.lang.String getBatchApplicationId() -> f
    void setBatchApplicationId(java.lang.String) -> a
    java.util.List executeAndWait() -> g
    com.facebook.RequestAsyncTask executeAsync() -> h
    java.lang.Object get(int) -> get
    void add(int,java.lang.Object) -> add
    boolean add(java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object remove(int) -> remove
com.facebook.RequestBatch$Callback -> com.facebook.ay:
    void onBatchCompleted$1a556f86() -> a
com.facebook.Response -> com.facebook.az:
    java.net.HttpURLConnection connection -> b
    com.facebook.model.GraphObject graphObject -> c
    com.facebook.model.GraphObjectList graphObjectList -> d
    boolean isFromCache -> e
    com.facebook.FacebookRequestError error -> f
    com.facebook.Request request -> g
    com.facebook.internal.FileLruCache responseCache -> h
    boolean $assertionsDisabled -> a
    com.facebook.FacebookRequestError getError() -> a
    com.facebook.model.GraphObject getGraphObject() -> b
    com.facebook.model.GraphObject getGraphObjectAs(java.lang.Class) -> a
    java.lang.String toString() -> toString
    java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch) -> a
    java.util.List createResponsesFromStream(java.io.InputStream,java.net.HttpURLConnection,com.facebook.RequestBatch,boolean) -> a
    java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean) -> a
    java.util.List constructErrorResponses(java.util.List,java.net.HttpURLConnection,com.facebook.FacebookException) -> a
com.facebook.Session -> com.facebook.ba:
    java.lang.String TAG -> a
    java.lang.Object STATIC_LOCK -> b
    com.facebook.Session activeSession -> c
    android.content.Context staticContext -> d
    java.util.Set OTHER_PUBLISH_PERMISSIONS -> e
    java.lang.String applicationId -> f
    com.facebook.SessionState state -> g
    com.facebook.AccessToken tokenInfo -> h
    java.util.Date lastAttemptedTokenExtendDate -> i
    com.facebook.Session$AuthorizationRequest pendingRequest -> j
    com.facebook.AuthorizationClient authorizationClient -> k
    android.os.Bundle authorizationBundle -> l
    java.util.List callbacks -> m
    android.os.Handler handler -> n
    com.facebook.Session$AutoPublishAsyncTask autoPublishAsyncTask -> o
    java.lang.Object lock -> p
    com.facebook.TokenCachingStrategy tokenCachingStrategy -> q
    com.facebook.Session$TokenRefreshRequest currentTokenRefreshRequest -> r
    int[] $SWITCH_TABLE$com$facebook$SessionState -> s
    boolean isOpened() -> a
    com.facebook.SessionState getState() -> b
    java.lang.String getApplicationId() -> c
    java.lang.String getAccessToken() -> d
    java.util.Date getExpirationDate() -> e
    java.util.List getPermissions() -> f
    void openForRead(com.facebook.Session$OpenRequest) -> a
    void openForPublish(com.facebook.Session$OpenRequest) -> b
    boolean onActivityResult(android.app.Activity,int,int,android.content.Intent) -> a
    void close() -> g
    void closeAndClearTokenInformation() -> h
    void addCallback(com.facebook.Session$StatusCallback) -> a
    void removeCallback(com.facebook.Session$StatusCallback) -> b
    java.lang.String toString() -> toString
    void extendTokenCompleted(android.os.Bundle) -> a
    com.facebook.Session getActiveSession() -> i
    void setActiveSession(com.facebook.Session) -> a
    com.facebook.Session openActiveSessionFromCache(android.content.Context) -> a
    android.content.Context getStaticContext() -> j
    void initializeStaticContext(android.content.Context) -> b
    void open(com.facebook.Session$OpenRequest,com.facebook.internal.SessionAuthorizationType) -> a
    boolean isPublishPermission(java.lang.String) -> a
    void handleAuthorizationResult(int,com.facebook.AuthorizationClient$Result) -> a
    boolean tryLoginActivity(com.facebook.Session$AuthorizationRequest) -> a
    boolean resolveIntent(android.content.Intent) -> a
    void finishAuthOrReauth(com.facebook.AccessToken,java.lang.Exception) -> a
    void saveTokenToCache(com.facebook.AccessToken) -> a
    void postStateChange(com.facebook.SessionState,com.facebook.SessionState,java.lang.Exception) -> a
    void postActiveSessionAction(java.lang.String) -> b
    void runWithHandlerOrExecutor(android.os.Handler,java.lang.Runnable) -> b
    void extendAccessTokenIfNeeded() -> k
    com.facebook.AccessToken getTokenInfo() -> l
    void setLastAttemptedTokenExtendDate(java.util.Date) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean areEqual(java.lang.Object,java.lang.Object) -> a
    android.content.Context access$1() -> m
    com.facebook.Session$TokenRefreshRequest access$2(com.facebook.Session) -> b
    void access$3$185ea34(com.facebook.Session) -> c
    void access$4$2fe48772(com.facebook.Session) -> d
    int[] $SWITCH_TABLE$com$facebook$SessionState() -> n
    void access$6$12f2666f(com.facebook.Session,com.facebook.AuthorizationClient$Result) -> a
    java.util.List access$7(com.facebook.Session) -> e
    android.os.Handler access$8(com.facebook.Session) -> f
    void access$9(android.os.Handler,java.lang.Runnable) -> a
com.facebook.Session$1 -> com.facebook.bb:
com.facebook.Session$2 -> com.facebook.bc:
    com.facebook.Session this$0 -> a
    void onCompleted(com.facebook.AuthorizationClient$Result) -> a
com.facebook.Session$3 -> com.facebook.bd:
    com.facebook.Session this$0 -> a
    com.facebook.SessionState val$newState -> b
    java.lang.Exception val$exception -> c
    void run() -> run
com.facebook.Session$3$1 -> com.facebook.be:
    com.facebook.Session$3 this$1 -> a
    com.facebook.Session$StatusCallback val$callback -> b
    com.facebook.SessionState val$newState -> c
    java.lang.Exception val$exception -> d
    void run() -> run
com.facebook.Session$AuthorizationRequest -> com.facebook.bf:
    com.facebook.Session$StartActivityDelegate startActivityDelegate -> a
    com.facebook.SessionLoginBehavior loginBehavior -> b
    int requestCode -> c
    com.facebook.Session$StatusCallback statusCallback -> d
    boolean isLegacy -> e
    java.util.List permissions -> f
    com.facebook.SessionDefaultAudience defaultAudience -> h
    java.lang.String applicationId -> g
    java.lang.String validateSameFbidAsToken -> i
    void setIsLegacy$1385ff() -> a
    com.facebook.Session$AuthorizationRequest setCallback(com.facebook.Session$StatusCallback) -> a
    com.facebook.Session$AuthorizationRequest setLoginBehavior(com.facebook.SessionLoginBehavior) -> a
    com.facebook.Session$AuthorizationRequest setRequestCode(int) -> a
    com.facebook.Session$AuthorizationRequest setPermissions(java.util.List) -> a
    com.facebook.Session$AuthorizationRequest setDefaultAudience(com.facebook.SessionDefaultAudience) -> a
    com.facebook.AuthorizationClient$AuthorizationRequest getAuthorizationClientRequest() -> b
    com.facebook.Session$StartActivityDelegate access$1(com.facebook.Session$AuthorizationRequest) -> a
com.facebook.Session$AuthorizationRequest$1 -> com.facebook.bg:
    com.facebook.Session$AuthorizationRequest this$1 -> a
    android.app.Activity val$activity -> b
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.Session$AuthorizationRequest$2 -> com.facebook.bh:
    com.facebook.Session$AuthorizationRequest this$1 -> a
    android.support.v4.app.Fragment val$fragment -> b
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.Session$AuthorizationRequest$4 -> com.facebook.bi:
    com.facebook.Session$AuthorizationRequest this$1 -> a
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.Session$AutoPublishAsyncTask -> com.facebook.bj:
    java.lang.String mApplicationId -> b
    android.content.Context mApplicationContext -> c
    com.facebook.Session this$0 -> a
    java.lang.Void doInBackground$10299ca() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.facebook.Session$Builder -> com.facebook.bk:
    android.content.Context context -> c
    java.lang.String applicationId -> a
    com.facebook.TokenCachingStrategy tokenCachingStrategy -> b
    com.facebook.Session$Builder setApplicationId(java.lang.String) -> a
    com.facebook.Session$Builder setTokenCachingStrategy(com.facebook.TokenCachingStrategy) -> a
    com.facebook.Session build() -> a
com.facebook.Session$OpenRequest -> com.facebook.bl:
    com.facebook.Session$OpenRequest setCallback(com.facebook.Session$StatusCallback) -> b
    com.facebook.Session$OpenRequest setLoginBehavior(com.facebook.SessionLoginBehavior) -> b
    com.facebook.Session$OpenRequest setRequestCode(int) -> b
    com.facebook.Session$OpenRequest setPermissions(java.util.List) -> b
    com.facebook.Session$OpenRequest setDefaultAudience(com.facebook.SessionDefaultAudience) -> b
    com.facebook.Session$AuthorizationRequest setDefaultAudience(com.facebook.SessionDefaultAudience) -> a
    com.facebook.Session$AuthorizationRequest setPermissions(java.util.List) -> a
    com.facebook.Session$AuthorizationRequest setRequestCode(int) -> a
    com.facebook.Session$AuthorizationRequest setCallback(com.facebook.Session$StatusCallback) -> a
    com.facebook.Session$AuthorizationRequest setLoginBehavior(com.facebook.SessionLoginBehavior) -> a
com.facebook.Session$StartActivityDelegate -> com.facebook.bm:
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.Session$StatusCallback -> com.facebook.bn:
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> a
com.facebook.Session$TokenRefreshRequest -> com.facebook.bo:
    android.os.Messenger messageReceiver -> a
    android.os.Messenger messageSender -> b
    com.facebook.Session this$0 -> c
    void bind() -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void cleanup() -> b
    void access$0(com.facebook.Session$TokenRefreshRequest) -> a
com.facebook.Session$TokenRefreshRequestHandler -> com.facebook.bp:
    java.lang.ref.WeakReference sessionWeakReference -> a
    java.lang.ref.WeakReference refreshRequestWeakReference -> b
    void handleMessage(android.os.Message) -> handleMessage
com.facebook.SessionDefaultAudience -> com.facebook.bq:
    com.facebook.SessionDefaultAudience NONE -> a
    com.facebook.SessionDefaultAudience ONLY_ME -> b
    com.facebook.SessionDefaultAudience FRIENDS -> c
    com.facebook.SessionDefaultAudience EVERYONE -> d
    java.lang.String nativeProtocolAudience -> e
    com.facebook.SessionDefaultAudience[] ENUM$VALUES -> f
    java.lang.String getNativeProtocolAudience() -> a
    com.facebook.SessionDefaultAudience[] values() -> values
    com.facebook.SessionDefaultAudience valueOf(java.lang.String) -> valueOf
com.facebook.SessionLoginBehavior -> com.facebook.br:
    com.facebook.SessionLoginBehavior SSO_WITH_FALLBACK -> a
    com.facebook.SessionLoginBehavior SSO_ONLY -> b
    com.facebook.SessionLoginBehavior SUPPRESS_SSO -> c
    boolean allowsKatanaAuth -> d
    boolean allowsWebViewAuth -> e
    com.facebook.SessionLoginBehavior[] ENUM$VALUES -> f
    boolean allowsKatanaAuth() -> a
    boolean allowsWebViewAuth() -> b
    com.facebook.SessionLoginBehavior[] values() -> values
    com.facebook.SessionLoginBehavior valueOf(java.lang.String) -> valueOf
com.facebook.SessionState -> com.facebook.bs:
    com.facebook.SessionState CREATED -> a
    com.facebook.SessionState CREATED_TOKEN_LOADED -> b
    com.facebook.SessionState OPENING -> c
    com.facebook.SessionState OPENED -> d
    com.facebook.SessionState OPENED_TOKEN_UPDATED -> e
    com.facebook.SessionState CLOSED_LOGIN_FAILED -> f
    com.facebook.SessionState CLOSED -> g
    com.facebook.SessionState$Category category -> h
    com.facebook.SessionState[] ENUM$VALUES -> i
    boolean isOpened() -> a
    boolean isClosed() -> b
    com.facebook.SessionState[] values() -> values
    com.facebook.SessionState valueOf(java.lang.String) -> valueOf
com.facebook.SessionState$Category -> com.facebook.bt:
    com.facebook.SessionState$Category CREATED_CATEGORY -> a
    com.facebook.SessionState$Category OPENED_CATEGORY -> b
    com.facebook.SessionState$Category CLOSED_CATEGORY -> c
    com.facebook.SessionState$Category[] ENUM$VALUES -> d
    com.facebook.SessionState$Category[] values() -> values
    com.facebook.SessionState$Category valueOf(java.lang.String) -> valueOf
com.facebook.Settings -> com.facebook.bu:
    java.util.HashSet loggingBehaviors -> a
    java.util.concurrent.Executor executor -> b
    boolean shouldAutoPublishInstall -> c
    java.lang.Object LOCK -> d
    android.net.Uri ATTRIBUTION_ID_CONTENT_URI -> e
    java.util.concurrent.BlockingQueue DEFAULT_WORK_QUEUE -> f
    java.util.concurrent.ThreadFactory DEFAULT_THREAD_FACTORY -> g
    boolean isLoggingBehaviorEnabled(com.facebook.LoggingBehavior) -> a
    java.util.concurrent.Executor getExecutor() -> a
    java.util.concurrent.Executor getAsyncTaskExecutor() -> c
    boolean getShouldAutoPublishInstall() -> b
    boolean publishInstallAndWait(android.content.Context,java.lang.String) -> a
com.facebook.Settings$1 -> com.facebook.bv:
    java.util.concurrent.atomic.AtomicInteger counter -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.facebook.SharedPreferencesTokenCachingStrategy -> com.facebook.bw:
    java.lang.String TAG -> a
    java.lang.String cacheKey -> b
    android.content.SharedPreferences cache -> c
    android.os.Bundle load() -> a
    void save(android.os.Bundle) -> a
    void clear() -> b
    void deserializeKey(java.lang.String,android.os.Bundle) -> a
com.facebook.TokenCachingStrategy -> com.facebook.bx:
    android.os.Bundle load() -> a
    void save(android.os.Bundle) -> a
    void clear() -> b
    void putToken(android.os.Bundle,java.lang.String) -> a
    void putExpirationDate(android.os.Bundle,java.util.Date) -> a
    java.util.Date getDate(android.os.Bundle,java.lang.String) -> b
    void putDate(android.os.Bundle,java.lang.String,java.util.Date) -> a
com.facebook.android.Facebook -> com.facebook.a.a:
    android.net.Uri ATTRIBUTION_ID_CONTENT_URI -> a
    java.lang.String DIALOG_BASE_URL -> b
    java.lang.String GRAPH_BASE_URL -> c
    java.lang.String RESTSERVER_URL -> d
    java.lang.Object lock -> e
    java.lang.String accessToken -> f
    long accessExpiresMillisecondsAfterEpoch -> g
    long lastAccessUpdateMillisecondsAfterEpoch -> h
    java.lang.String mAppId -> i
    android.app.Activity pendingAuthorizationActivity -> j
    java.lang.String[] pendingAuthorizationPermissions -> k
    com.facebook.Session session -> l
    boolean sessionInvalidated -> m
    com.facebook.android.Facebook$SetterTokenCachingStrategy tokenCache -> n
    com.facebook.Session userSetSession -> o
    long REFRESH_TOKEN_BARRIER -> p
    java.lang.String request(java.lang.String) -> a
    void checkUserSession(java.lang.String) -> c
    com.facebook.Session getSession() -> a
    java.lang.String getAccessToken() -> b
    long getAccessExpires() -> c
    void setAccessToken(java.lang.String) -> b
    void setAccessExpires(long) -> a
    java.lang.String access$0(com.facebook.android.Facebook) -> a
    long access$2(com.facebook.android.Facebook) -> b
    java.lang.String[] access$3(com.facebook.android.Facebook) -> c
    java.util.List access$4(java.lang.String[]) -> a
    long access$5(com.facebook.android.Facebook) -> d
    void access$6(com.facebook.android.Facebook,java.lang.String) -> a
    void access$7(com.facebook.android.Facebook,long) -> a
    java.lang.String[] access$8(java.util.List) -> a
    void access$9(com.facebook.android.Facebook,java.lang.String[]) -> a
    void access$10(com.facebook.android.Facebook,long) -> b
com.facebook.android.Facebook$SetterTokenCachingStrategy -> com.facebook.a.b:
    com.facebook.android.Facebook this$0 -> a
    android.os.Bundle load() -> a
    void save(android.os.Bundle) -> a
    void clear() -> b
com.facebook.android.FacebookError -> com.facebook.a.c:
    int mErrorCode -> a
    java.lang.String mErrorType -> b
com.facebook.android.R -> com.facebook.a.d:
com.facebook.android.R$color -> com.facebook.a.e:
    int com_facebook_blue -> com_facebook_blue
    int com_facebook_usersettingsfragment_not_connected_text_color -> com_facebook_usersettingsfragment_not_connected_text_color
    int com_facebook_usersettingsfragment_connected_text_color -> com_facebook_usersettingsfragment_connected_text_color
    int com_facebook_usersettingsfragment_connected_shadow_color -> com_facebook_usersettingsfragment_connected_shadow_color
    int com_facebook_loginview_text_color -> com_facebook_loginview_text_color
com.facebook.android.R$dimen -> com.facebook.a.f:
    int com_facebook_loginview_text_size -> com_facebook_loginview_text_size
    int com_facebook_loginview_padding_right -> com_facebook_loginview_padding_right
    int com_facebook_profilepictureview_preset_size_normal -> com_facebook_profilepictureview_preset_size_normal
    int com_facebook_usersettingsfragment_profile_picture_width -> com_facebook_usersettingsfragment_profile_picture_width
    int com_facebook_usersettingsfragment_profile_picture_height -> com_facebook_usersettingsfragment_profile_picture_height
    int com_facebook_profilepictureview_preset_size_small -> com_facebook_profilepictureview_preset_size_small
    int com_facebook_loginview_width -> com_facebook_loginview_width
    int com_facebook_loginview_padding_bottom -> com_facebook_loginview_padding_bottom
    int com_facebook_loginview_padding_left -> com_facebook_loginview_padding_left
    int com_facebook_loginview_height -> com_facebook_loginview_height
    int com_facebook_loginview_padding_top -> com_facebook_loginview_padding_top
    int com_facebook_profilepictureview_preset_size_large -> com_facebook_profilepictureview_preset_size_large
com.facebook.android.R$drawable -> com.facebook.a.g:
    int com_facebook_picker_list_selector -> com_facebook_picker_list_selector
    int com_facebook_button_check -> com_facebook_button_check
    int com_facebook_loginbutton_blue_normal -> com_facebook_loginbutton_blue_normal
    int com_facebook_loginbutton_blue_focused -> com_facebook_loginbutton_blue_focused
    int com_facebook_button_check_on -> com_facebook_button_check_on
    int com_facebook_profile_picture_blank_portrait -> com_facebook_profile_picture_blank_portrait
    int com_facebook_picker_list_selector_background_transition -> com_facebook_picker_list_selector_background_transition
    int com_facebook_button_grey_pressed -> com_facebook_button_grey_pressed
    int com_facebook_picker_list_selector_disabled -> com_facebook_picker_list_selector_disabled
    int com_facebook_button_grey_focused -> com_facebook_button_grey_focused
    int com_facebook_picker_top_button -> com_facebook_picker_top_button
    int com_facebook_loginbutton_silver -> com_facebook_loginbutton_silver
    int com_facebook_profile_picture_blank_square -> com_facebook_profile_picture_blank_square
    int com_facebook_logo -> com_facebook_logo
    int com_facebook_usersettingsfragment_background_gradient -> com_facebook_usersettingsfragment_background_gradient
    int com_facebook_top_button -> com_facebook_top_button
    int com_facebook_close -> com_facebook_close
    int com_facebook_picker_list_longpressed -> com_facebook_picker_list_longpressed
    int com_facebook_icon -> com_facebook_icon
    int com_facebook_top_background -> com_facebook_top_background
    int com_facebook_place_default_icon -> com_facebook_place_default_icon
    int com_facebook_picker_list_pressed -> com_facebook_picker_list_pressed
    int com_facebook_list_section_header_background -> com_facebook_list_section_header_background
    int com_facebook_profile_default_icon -> com_facebook_profile_default_icon
    int com_facebook_picker_item_background -> com_facebook_picker_item_background
    int com_facebook_picker_list_focused -> com_facebook_picker_list_focused
    int com_facebook_list_divider -> com_facebook_list_divider
    int com_facebook_button_check_off -> com_facebook_button_check_off
    int com_facebook_loginbutton_blue_pressed -> com_facebook_loginbutton_blue_pressed
    int com_facebook_button_grey_normal -> com_facebook_button_grey_normal
    int com_facebook_loginbutton_blue -> com_facebook_loginbutton_blue
com.facebook.android.R$id -> com.facebook.a.h:
    int com_facebook_picker_title -> com_facebook_picker_title
    int com_facebook_picker_row_activity_circle -> com_facebook_picker_row_activity_circle
    int com_facebook_usersettingsfragment_login_button -> com_facebook_usersettingsfragment_login_button
    int com_facebook_usersettingsfragment_logo_image -> com_facebook_usersettingsfragment_logo_image
    int com_facebook_picker_checkbox -> com_facebook_picker_checkbox
    int normal -> normal
    int com_facebook_usersettingsfragment_profile_name -> com_facebook_usersettingsfragment_profile_name
    int picker_subtitle -> picker_subtitle
    int com_facebook_picker_title_bar_stub -> com_facebook_picker_title_bar_stub
    int com_facebook_picker_profile_pic_stub -> com_facebook_picker_profile_pic_stub
    int com_facebook_picker_activity_circle -> com_facebook_picker_activity_circle
    int com_facebook_picker_image -> com_facebook_picker_image
    int com_facebook_placepickerfragment_search_box_stub -> com_facebook_placepickerfragment_search_box_stub
    int com_facebook_picker_top_bar -> com_facebook_picker_top_bar
    int com_facebook_picker_list_section_header -> com_facebook_picker_list_section_header
    int com_facebook_picker_title_bar -> com_facebook_picker_title_bar
    int search_box -> search_box
    int com_facebook_picker_checkbox_stub -> com_facebook_picker_checkbox_stub
    int com_facebook_login_activity_progress_bar -> com_facebook_login_activity_progress_bar
    int com_facebook_picker_divider -> com_facebook_picker_divider
    int com_facebook_picker_list_view -> com_facebook_picker_list_view
    int small -> small
    int large -> large
    int com_facebook_picker_done_button -> com_facebook_picker_done_button
com.facebook.android.R$layout -> com.facebook.a.i:
    int com_facebook_picker_title_bar_stub -> com_facebook_picker_title_bar_stub
    int com_facebook_friendpickerfragment -> com_facebook_friendpickerfragment
    int com_facebook_picker_image -> com_facebook_picker_image
    int com_facebook_picker_list_row -> com_facebook_picker_list_row
    int com_facebook_placepickerfragment_list_row -> com_facebook_placepickerfragment_list_row
    int com_facebook_picker_list_section_header -> com_facebook_picker_list_section_header
    int com_facebook_picker_title_bar -> com_facebook_picker_title_bar
    int com_facebook_picker_checkbox -> com_facebook_picker_checkbox
    int com_facebook_placepickerfragment -> com_facebook_placepickerfragment
    int com_facebook_picker_search_box -> com_facebook_picker_search_box
    int com_facebook_login_activity_layout -> com_facebook_login_activity_layout
    int com_facebook_usersettingsfragment -> com_facebook_usersettingsfragment
    int com_facebook_picker_activity_circle_row -> com_facebook_picker_activity_circle_row
com.facebook.android.R$string -> com.facebook.a.j:
    int com_facebook_requesterror_relogin -> com_facebook_requesterror_relogin
    int com_facebook_placepicker_subtitle_were_here_only_format -> com_facebook_placepicker_subtitle_were_here_only_format
    int com_facebook_usersettingsfragment_logged_in -> com_facebook_usersettingsfragment_logged_in
    int com_facebook_loginview_log_in_button -> com_facebook_loginview_log_in_button
    int com_facebook_choose_friends -> com_facebook_choose_friends
    int com_facebook_loginview_logged_in_using_facebook -> com_facebook_loginview_logged_in_using_facebook
    int com_facebook_placepicker_subtitle_format -> com_facebook_placepicker_subtitle_format
    int com_facebook_loginview_logged_in_as -> com_facebook_loginview_logged_in_as
    int com_facebook_requesterror_web_login -> com_facebook_requesterror_web_login
    int com_facebook_usersettingsfragment_not_logged_in -> com_facebook_usersettingsfragment_not_logged_in
    int com_facebook_requesterror_reconnect -> com_facebook_requesterror_reconnect
    int com_facebook_loginview_log_out_action -> com_facebook_loginview_log_out_action
    int com_facebook_dialogloginactivity_ok_button -> com_facebook_dialogloginactivity_ok_button
    int com_facebook_internet_permission_error_message -> com_facebook_internet_permission_error_message
    int com_facebook_internet_permission_error_title -> com_facebook_internet_permission_error_title
    int com_facebook_loginview_log_out_button -> com_facebook_loginview_log_out_button
    int com_facebook_requesterror_password_changed -> com_facebook_requesterror_password_changed
    int com_facebook_usersettingsfragment_log_in_button -> com_facebook_usersettingsfragment_log_in_button
    int com_facebook_logo_content_description -> com_facebook_logo_content_description
    int com_facebook_requesterror_permissions -> com_facebook_requesterror_permissions
    int com_facebook_nearby -> com_facebook_nearby
    int com_facebook_loading -> com_facebook_loading
    int com_facebook_placepicker_subtitle_catetory_only_format -> com_facebook_placepicker_subtitle_catetory_only_format
    int com_facebook_picker_done_button_text -> com_facebook_picker_done_button_text
    int com_facebook_loginview_cancel_action -> com_facebook_loginview_cancel_action
com.facebook.android.R$styleable -> com.facebook.a.k:
    int com_facebook_place_picker_fragment_search_text -> com_facebook_place_picker_fragment_search_text
    int[] com_facebook_friend_picker_fragment -> com_facebook_friend_picker_fragment
    int com_facebook_profile_picture_view_is_cropped -> com_facebook_profile_picture_view_is_cropped
    int com_facebook_login_view_login_text -> com_facebook_login_view_login_text
    int com_facebook_login_view_logout_text -> com_facebook_login_view_logout_text
    int com_facebook_picker_fragment_title_bar_background -> com_facebook_picker_fragment_title_bar_background
    int com_facebook_friend_picker_fragment_multi_select -> com_facebook_friend_picker_fragment_multi_select
    int[] com_facebook_place_picker_fragment -> com_facebook_place_picker_fragment
    int com_facebook_profile_picture_view_preset_size -> com_facebook_profile_picture_view_preset_size
    int com_facebook_login_view_fetch_user_info -> com_facebook_login_view_fetch_user_info
    int com_facebook_login_view_confirm_logout -> com_facebook_login_view_confirm_logout
    int com_facebook_picker_fragment_extra_fields -> com_facebook_picker_fragment_extra_fields
    int com_facebook_picker_fragment_title_text -> com_facebook_picker_fragment_title_text
    int[] com_facebook_picker_fragment -> com_facebook_picker_fragment
    int com_facebook_picker_fragment_done_button_background -> com_facebook_picker_fragment_done_button_background
    int com_facebook_place_picker_fragment_results_limit -> com_facebook_place_picker_fragment_results_limit
    int com_facebook_picker_fragment_show_title_bar -> com_facebook_picker_fragment_show_title_bar
    int com_facebook_picker_fragment_done_button_text -> com_facebook_picker_fragment_done_button_text
    int[] com_facebook_profile_picture_view -> com_facebook_profile_picture_view
    int com_facebook_picker_fragment_show_pictures -> com_facebook_picker_fragment_show_pictures
    int[] com_facebook_login_view -> com_facebook_login_view
    int com_facebook_place_picker_fragment_show_search_box -> com_facebook_place_picker_fragment_show_search_box
    int com_facebook_place_picker_fragment_radius_in_meters -> com_facebook_place_picker_fragment_radius_in_meters
com.facebook.android.Util -> com.facebook.a.l:
    java.lang.String encodePostBody(android.os.Bundle,java.lang.String) -> a
    java.lang.String encodeUrl(android.os.Bundle) -> a
    android.os.Bundle decodeUrl(java.lang.String) -> b
    android.os.Bundle parseUrl(java.lang.String) -> a
    java.lang.String openUrl(java.lang.String,java.lang.String,android.os.Bundle) -> a
    java.lang.String read(java.io.InputStream) -> a
com.facebook.internal.CacheableRequestBatch -> com.facebook.b.a:
    java.lang.String cacheKey -> a
    boolean forceRoundTrip -> b
    java.lang.String getCacheKeyOverride() -> i
    boolean getForceRoundTrip() -> j
com.facebook.internal.FileLruCache -> com.facebook.b.b:
    java.lang.String TAG -> a
    java.util.concurrent.atomic.AtomicLong bufferIndex -> b
    java.lang.String tag -> c
    com.facebook.internal.FileLruCache$Limits limits -> d
    java.io.File directory -> e
    boolean isTrimPending -> f
    java.lang.Object lock -> g
    java.io.InputStream get(java.lang.String) -> a
    java.io.InputStream get$c62d68c(java.lang.String) -> b
    java.io.OutputStream openPutStream$5c95edf(java.lang.String) -> c
    java.io.InputStream interceptAndPut(java.lang.String,java.io.InputStream) -> a
    java.lang.String toString() -> toString
    java.util.concurrent.atomic.AtomicLong access$0() -> a
    void access$1(com.facebook.internal.FileLruCache,java.lang.String,java.io.File) -> a
    void access$2(com.facebook.internal.FileLruCache) -> a
com.facebook.internal.FileLruCache$1 -> com.facebook.b.c:
    com.facebook.internal.FileLruCache this$0 -> a
    java.lang.String val$key -> b
    java.io.File val$buffer -> c
    void onClose() -> a
com.facebook.internal.FileLruCache$2 -> com.facebook.b.d:
    com.facebook.internal.FileLruCache this$0 -> a
    void run() -> run
com.facebook.internal.FileLruCache$BufferFile -> com.facebook.b.e:
    java.io.FilenameFilter filterExcludeBufferFiles -> a
    java.io.FilenameFilter filterExcludeNonBufferFiles -> b
    void deleteAll(java.io.File) -> a
    java.io.FilenameFilter excludeBufferFiles() -> a
    java.io.File newFile(java.io.File) -> b
com.facebook.internal.FileLruCache$BufferFile$1 -> com.facebook.b.f:
    boolean accept(java.io.File,java.lang.String) -> accept
com.facebook.internal.FileLruCache$BufferFile$2 -> com.facebook.b.g:
    boolean accept(java.io.File,java.lang.String) -> accept
com.facebook.internal.FileLruCache$CloseCallbackOutputStream -> com.facebook.b.h:
    java.io.OutputStream innerStream -> a
    com.facebook.internal.FileLruCache$StreamCloseCallback callback -> b
    void close() -> close
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
com.facebook.internal.FileLruCache$CopyingInputStream -> com.facebook.b.i:
    java.io.InputStream input -> a
    java.io.OutputStream output -> b
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read(byte[]) -> read
    int read() -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
com.facebook.internal.FileLruCache$Limits -> com.facebook.b.j:
    int byteCount -> a
    int fileCount -> b
com.facebook.internal.FileLruCache$ModifiedFile -> com.facebook.b.k:
    java.io.File file -> a
    long modified -> b
    java.io.File getFile() -> a
    long getModified() -> b
    int compareTo(com.facebook.internal.FileLruCache$ModifiedFile) -> a
    boolean equals(java.lang.Object) -> equals
    int compareTo(java.lang.Object) -> compareTo
com.facebook.internal.FileLruCache$StreamCloseCallback -> com.facebook.b.l:
    void onClose() -> a
com.facebook.internal.FileLruCache$StreamHeader -> com.facebook.b.m:
    org.json.JSONObject readHeader(java.io.InputStream) -> a
com.facebook.internal.Logger -> com.facebook.b.n:
    java.util.HashMap stringsToReplace -> a
    com.facebook.LoggingBehavior behavior -> b
    java.lang.String tag -> c
    java.lang.StringBuilder contents -> d
    int priority -> e
    void registerStringToReplace(java.lang.String,java.lang.String) -> a
    void registerAccessToken(java.lang.String) -> a
    void log(com.facebook.LoggingBehavior,java.lang.String,java.lang.String) -> a
    void log(com.facebook.LoggingBehavior,java.lang.String,java.lang.String,java.lang.Object[]) -> a
    void log(com.facebook.LoggingBehavior,int,java.lang.String,java.lang.String) -> a
    java.lang.String replaceStrings(java.lang.String) -> c
    void log() -> a
    void append(java.lang.String) -> b
    void appendKeyValue(java.lang.String,java.lang.Object) -> a
com.facebook.internal.ServerProtocol -> com.facebook.b.o:
    java.util.Collection errorsProxyAuthDisabled -> a
    java.util.Collection errorsUserCanceled -> b
com.facebook.internal.SessionAuthorizationType -> com.facebook.b.p:
    com.facebook.internal.SessionAuthorizationType READ -> a
    com.facebook.internal.SessionAuthorizationType PUBLISH -> b
    com.facebook.internal.SessionAuthorizationType[] ENUM$VALUES -> c
    com.facebook.internal.SessionAuthorizationType[] values() -> values
    com.facebook.internal.SessionAuthorizationType valueOf(java.lang.String) -> valueOf
com.facebook.internal.SessionTracker -> com.facebook.b.q:
    com.facebook.Session session -> a
    com.facebook.Session$StatusCallback callback -> b
    android.content.BroadcastReceiver receiver -> c
    android.support.v4.content.LocalBroadcastManager broadcastManager -> d
    boolean isTracking -> e
    com.facebook.Session getSession() -> a
    com.facebook.Session getOpenSession() -> b
    void setSession(com.facebook.Session) -> a
    void addBroadcastReceiver() -> c
com.facebook.internal.SessionTracker$ActiveSessionBroadcastReceiver -> com.facebook.b.r:
    com.facebook.internal.SessionTracker this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.facebook.internal.SessionTracker$CallbackWrapper -> com.facebook.b.s:
    com.facebook.Session$StatusCallback wrapped -> b
    com.facebook.internal.SessionTracker this$0 -> a
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> a
com.facebook.internal.Utility -> com.facebook.b.t:
    boolean isSubset(java.util.Collection,java.util.Collection) -> a
    boolean isNullOrEmpty(java.util.Collection) -> a
    boolean isNullOrEmpty(java.lang.String) -> a
    java.lang.String md5hash(java.lang.String) -> b
    android.net.Uri buildUri(java.lang.String,java.lang.String,android.os.Bundle) -> a
    void closeQuietly(java.io.Closeable) -> a
    java.lang.String getMetadataApplicationId(android.content.Context) -> a
    java.lang.Object getStringPropertyAsJSON(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    java.lang.String readStreamToString(java.io.InputStream) -> a
    void clearCookiesForDomain(android.content.Context,java.lang.String) -> a
    void clearFacebookCookies(android.content.Context) -> b
com.facebook.internal.Validate -> com.facebook.b.u:
    void notNull(java.lang.Object,java.lang.String) -> a
    void notEmptyAndContainsNoNulls(java.util.Collection,java.lang.String) -> a
    void notNullOrEmpty(java.lang.String,java.lang.String) -> a
com.facebook.model.GraphMultiResult -> com.facebook.c.a:
    com.facebook.model.GraphObjectList getData() -> a
com.facebook.model.GraphObject -> com.facebook.c.b:
    com.facebook.model.GraphObject cast$489dc331() -> b
    java.util.Map asMap() -> c
    org.json.JSONObject getInnerJSONObject() -> d
    java.lang.Object getProperty$9543ced() -> e
    void setProperty$645b3fe5() -> f
com.facebook.model.GraphObject$Factory -> com.facebook.c.c:
    java.util.HashSet verifiedGraphObjectClasses -> a
    java.text.SimpleDateFormat[] dateFormats -> b
    com.facebook.model.GraphObject create(org.json.JSONObject) -> a
    com.facebook.model.GraphObject create() -> a
    com.facebook.model.GraphObjectList createList(org.json.JSONArray,java.lang.Class) -> a
    com.facebook.model.GraphObject createGraphObjectProxy(java.lang.Class,org.json.JSONObject) -> b
    boolean hasClassBeenVerified(java.lang.Class) -> a
    void recordClassHasBeenVerified(java.lang.Class) -> b
    java.lang.Object coerceValueToExpectedType(java.lang.Object,java.lang.Class,java.lang.reflect.ParameterizedType) -> a
    java.lang.String convertCamelCaseToLowercaseWithUnderscores(java.lang.String) -> a
    com.facebook.model.GraphObject access$0(java.lang.Class,org.json.JSONObject) -> a
    java.util.Map access$1(org.json.JSONObject) -> b
    java.lang.Object access$2(java.lang.Object) -> a
com.facebook.model.GraphObject$Factory$GraphObjectListImpl -> com.facebook.c.d:
    org.json.JSONArray state -> a
    java.lang.Class itemType -> b
    java.lang.String toString() -> toString
    void add(int,java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object get(int) -> get
    int size() -> size
    org.json.JSONArray getInnerJSONArray() -> a
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void checkIndex(int) -> a
    void put(int,java.lang.Object) -> a
com.facebook.model.GraphObject$Factory$GraphObjectProxy -> com.facebook.c.e:
    java.lang.Class graphObjectClass -> b
    java.lang.String toString() -> toString
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    java.lang.Object proxyGraphObjectGettersAndSetters(java.lang.reflect.Method,java.lang.Object[]) -> b
    java.lang.Object setJSONProperty(java.lang.Object[]) -> a
com.facebook.model.GraphObject$Factory$ProxyBase -> com.facebook.c.f:
    java.lang.Object state -> a
    java.lang.Object throwUnexpectedMethodSignature(java.lang.reflect.Method) -> a
    java.lang.Object proxyObjectMethods$6638a866(java.lang.reflect.Method,java.lang.Object[]) -> a
com.facebook.model.GraphObjectList -> com.facebook.c.g:
    org.json.JSONArray getInnerJSONArray() -> a
com.facebook.model.GraphUser -> com.facebook.c.h:
    java.lang.String getId() -> a
    java.lang.String getName() -> g
com.facebook.model.JsonUtil -> com.facebook.c.i:
    java.util.Set jsonObjectKeySet(org.json.JSONObject) -> a
    void jsonObjectPutAll(org.json.JSONObject,java.util.Map) -> a
    java.util.Collection jsonObjectValues(org.json.JSONObject) -> b
com.facebook.model.JsonUtil$JSONObjectEntry -> com.facebook.c.j:
    java.lang.String key -> a
    java.lang.Object value -> b
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object getKey() -> getKey
com.facebook.model.PropertyName -> com.facebook.c.k:
    java.lang.String value() -> a
com.facebook.widget.LoginButton -> com.facebook.widget.LoginButton:
    java.lang.String TAG -> a
    java.lang.String applicationId -> b
    com.facebook.internal.SessionTracker sessionTracker -> c
    com.facebook.model.GraphUser user -> d
    com.facebook.Session userInfoSession -> e
    boolean confirmLogout -> f
    boolean fetchUserInfo -> g
    java.lang.String loginText -> h
    java.lang.String logoutText -> i
    com.facebook.widget.LoginButton$UserInfoChangedCallback userInfoChangedCallback -> j
    android.support.v4.app.Fragment parentFragment -> k
    com.facebook.widget.LoginButton$LoginButtonProperties properties -> l
    void setOnErrorListener(com.facebook.widget.LoginButton$OnErrorListener) -> setOnErrorListener
    com.facebook.widget.LoginButton$OnErrorListener getOnErrorListener() -> getOnErrorListener
    void setDefaultAudience(com.facebook.SessionDefaultAudience) -> setDefaultAudience
    com.facebook.SessionDefaultAudience getDefaultAudience() -> getDefaultAudience
    void setReadPermissions(java.util.List) -> setReadPermissions
    void setPublishPermissions(java.util.List) -> setPublishPermissions
    void setLoginBehavior(com.facebook.SessionLoginBehavior) -> setLoginBehavior
    com.facebook.SessionLoginBehavior getLoginBehavior() -> getLoginBehavior
    void setApplicationId(java.lang.String) -> setApplicationId
    com.facebook.widget.LoginButton$UserInfoChangedCallback getUserInfoChangedCallback() -> getUserInfoChangedCallback
    void setUserInfoChangedCallback(com.facebook.widget.LoginButton$UserInfoChangedCallback) -> setUserInfoChangedCallback
    void setSessionStatusCallback(com.facebook.Session$StatusCallback) -> setSessionStatusCallback
    com.facebook.Session$StatusCallback getSessionStatusCallback() -> getSessionStatusCallback
    void setSession(com.facebook.Session) -> setSession
    void onFinishInflate() -> onFinishInflate
    void finishInit() -> b
    void setFragment(android.support.v4.app.Fragment) -> setFragment
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    java.util.List getPermissions() -> getPermissions
    void setProperties(com.facebook.widget.LoginButton$LoginButtonProperties) -> setProperties
    void parseAttributes(android.util.AttributeSet) -> a
    void setButtonText() -> c
    boolean initializeActiveSessionWithCachedToken(android.content.Context) -> a
    void fetchUserInfo() -> d
    void handleError(java.lang.Exception) -> a
    java.lang.String access$0() -> a
    com.facebook.internal.SessionTracker access$1(com.facebook.widget.LoginButton) -> a
    boolean access$2(com.facebook.widget.LoginButton) -> b
    com.facebook.model.GraphUser access$3(com.facebook.widget.LoginButton) -> c
    java.lang.String access$4(com.facebook.widget.LoginButton) -> d
    android.support.v4.app.Fragment access$5(com.facebook.widget.LoginButton) -> e
    com.facebook.widget.LoginButton$LoginButtonProperties access$6(com.facebook.widget.LoginButton) -> f
    void access$7(com.facebook.widget.LoginButton) -> g
    void access$8(com.facebook.widget.LoginButton) -> h
    void access$9(com.facebook.widget.LoginButton,com.facebook.model.GraphUser) -> a
    com.facebook.widget.LoginButton$UserInfoChangedCallback access$10(com.facebook.widget.LoginButton) -> i
com.facebook.widget.LoginButton$1 -> com.facebook.widget.a:
    com.facebook.widget.LoginButton this$0 -> a
    com.facebook.Session val$currentSession -> b
    void onCompleted(com.facebook.model.GraphUser,com.facebook.Response) -> a
com.facebook.widget.LoginButton$LoginButtonCallback -> com.facebook.widget.b:
    com.facebook.widget.LoginButton this$0 -> a
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> a
com.facebook.widget.LoginButton$LoginButtonProperties -> com.facebook.widget.c:
    com.facebook.SessionDefaultAudience defaultAudience -> a
    java.util.List permissions -> b
    com.facebook.internal.SessionAuthorizationType authorizationType -> c
    com.facebook.widget.LoginButton$OnErrorListener onErrorListener -> d
    com.facebook.SessionLoginBehavior loginBehavior -> e
    com.facebook.Session$StatusCallback sessionStatusCallback -> f
    boolean validatePermissions(java.util.List,com.facebook.internal.SessionAuthorizationType,com.facebook.Session) -> a
com.facebook.widget.LoginButton$LoginClickListener -> com.facebook.widget.d:
    com.facebook.widget.LoginButton this$0 -> a
    void onClick(android.view.View) -> onClick
com.facebook.widget.LoginButton$LoginClickListener$1 -> com.facebook.widget.e:
    com.facebook.widget.LoginButton$LoginClickListener this$1 -> a
    com.facebook.Session val$openSession -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.facebook.widget.LoginButton$OnErrorListener -> com.facebook.widget.f:
com.facebook.widget.LoginButton$UserInfoChangedCallback -> com.facebook.widget.g:
com.facebook.widget.WebDialog -> com.facebook.widget.h:
    java.lang.String url -> a
    com.facebook.widget.WebDialog$OnCompleteListener onCompleteListener -> b
    android.webkit.WebView webView -> c
    android.app.ProgressDialog spinner -> d
    android.widget.ImageView crossImageView -> e
    android.widget.FrameLayout contentFrameLayout -> f
    boolean listenerCalled -> g
    boolean isDetached -> h
    void dismiss() -> dismiss
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onCreate(android.os.Bundle) -> onCreate
    void sendErrorToListener(java.lang.Throwable) -> a
    void access$0(com.facebook.widget.WebDialog,android.os.Bundle) -> a
    void access$1(com.facebook.widget.WebDialog) -> a
    void access$2(com.facebook.widget.WebDialog,java.lang.Throwable) -> a
    boolean access$3(com.facebook.widget.WebDialog) -> b
    android.app.ProgressDialog access$4(com.facebook.widget.WebDialog) -> c
    android.widget.FrameLayout access$5(com.facebook.widget.WebDialog) -> d
    android.webkit.WebView access$6(com.facebook.widget.WebDialog) -> e
    android.widget.ImageView access$7(com.facebook.widget.WebDialog) -> f
com.facebook.widget.WebDialog$1 -> com.facebook.widget.i:
    com.facebook.widget.WebDialog this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.facebook.widget.WebDialog$2 -> com.facebook.widget.j:
    com.facebook.widget.WebDialog this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.facebook.widget.WebDialog$3 -> com.facebook.widget.k:
    com.facebook.widget.WebDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.facebook.widget.WebDialog$Builder -> com.facebook.widget.l:
    com.facebook.widget.WebDialog build() -> a
    com.facebook.widget.WebDialog$BuilderBase setOnCompleteListener(com.facebook.widget.WebDialog$OnCompleteListener) -> a
com.facebook.widget.WebDialog$BuilderBase -> com.facebook.widget.m:
    android.content.Context context -> a
    com.facebook.Session session -> f
    java.lang.String applicationId -> b
    java.lang.String action -> g
    int theme -> c
    com.facebook.widget.WebDialog$OnCompleteListener listener -> d
    android.os.Bundle parameters -> e
    com.facebook.widget.WebDialog$BuilderBase setOnCompleteListener(com.facebook.widget.WebDialog$OnCompleteListener) -> a
    com.facebook.widget.WebDialog build() -> a
com.facebook.widget.WebDialog$DialogWebViewClient -> com.facebook.widget.n:
    com.facebook.widget.WebDialog this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.facebook.widget.WebDialog$OnCompleteListener -> com.facebook.widget.o:
    void onComplete(android.os.Bundle,com.facebook.FacebookException) -> a
com.jeffthefate.dmbquiz.ApplicationEx -> com.jeffthefate.dmbquiz.ApplicationEx:
    android.content.Context app -> d
    com.jeffthefate.dmbquiz.DatabaseHelper dbHelper -> a
    boolean mHasWifi -> e
    boolean mHasConnection -> f
    boolean mIsActive -> g
    android.net.ConnectivityManager connMan -> h
    java.lang.String cacheLocation -> b
    android.widget.Toast mToast -> c
    void onCreate() -> onCreate
    android.content.Context getApp() -> a
    void onStacktrace(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void reportQuestion(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void setConnection(boolean) -> a
    boolean getConnection() -> b
    boolean isActive() -> c
    void setActive() -> d
    void setInactive() -> e
    void setStringArrayPref(java.lang.String,java.util.ArrayList) -> a
    java.util.ArrayList getStringArrayPref(java.lang.String) -> a
com.jeffthefate.dmbquiz.ApplicationEx$1 -> com.jeffthefate.dmbquiz.a:
    com.jeffthefate.dmbquiz.ApplicationEx this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.jeffthefate.dmbquiz.ApplicationEx$2 -> com.jeffthefate.dmbquiz.b:
    void done(com.parse.ParseException) -> a
com.jeffthefate.dmbquiz.Constants -> com.jeffthefate.dmbquiz.c:
    java.lang.String SCREENS_LOCATION -> a
com.jeffthefate.dmbquiz.DatabaseHelper -> com.jeffthefate.dmbquiz.d:
    android.database.sqlite.SQLiteDatabase db -> a
    com.jeffthefate.dmbquiz.DatabaseHelper instance -> b
    com.jeffthefate.dmbquiz.DatabaseHelper getInstance() -> a
    java.lang.Object clone() -> clone
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    long insertRecord(android.content.ContentValues,java.lang.String,java.lang.String) -> a
    long updateRecord(android.content.ContentValues,java.lang.String,java.lang.String,java.lang.String[]) -> a
    boolean hasUser(java.lang.String) -> a
    void addUser(com.parse.ParseUser,java.lang.String) -> a
    void addLeader(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    long setUserValue(java.lang.String,java.lang.String,java.lang.String) -> a
    long setUserValue(int,java.lang.String,java.lang.String) -> a
    java.lang.String getUserStringValue(java.lang.String,java.lang.String) -> a
    int getUserIntValue(java.lang.String,java.lang.String) -> b
    java.util.ArrayList getLeaderRanks() -> b
    java.util.ArrayList getLeaderUsers() -> c
    java.util.ArrayList getLeaderScores() -> d
    java.util.ArrayList getLeaderIds() -> e
    void clearLeaders() -> f
    boolean isAnonUser(java.lang.String) -> b
    long setScore(int,java.lang.String) -> a
    int getScore(java.lang.String) -> c
    long setOffset(int,java.lang.String) -> b
    java.lang.String getCurrUser() -> g
    long setQuestions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) -> a
    java.lang.String getCurrQuestionId(java.lang.String) -> d
    java.lang.String getCurrQuestionQuestion(java.lang.String) -> e
    java.lang.String getCurrQuestionAnswer(java.lang.String) -> f
    java.lang.String getCurrQuestionCategory(java.lang.String) -> g
    java.lang.String getCurrQuestionScore(java.lang.String) -> h
    boolean getCurrQuestionHint(java.lang.String) -> i
    boolean getCurrQuestionSkip(java.lang.String) -> j
    java.lang.String getNextQuestionId(java.lang.String) -> k
    java.lang.String getNextQuestionQuestion(java.lang.String) -> l
    java.lang.String getNextQuestionAnswer(java.lang.String) -> m
    java.lang.String getNextQuestionCategory(java.lang.String) -> n
    java.lang.String getNextQuestionScore(java.lang.String) -> o
    boolean getNextQuestionHint(java.lang.String) -> p
    boolean getNextQuestionSkip(java.lang.String) -> q
    java.lang.String getThirdQuestionId(java.lang.String) -> r
    java.lang.String getThirdQuestionQuestion(java.lang.String) -> s
    java.lang.String getThirdQuestionAnswer(java.lang.String) -> t
    java.lang.String getThirdQuestionCategory(java.lang.String) -> u
    java.lang.String getThirdQuestionScore(java.lang.String) -> v
    boolean getThirdQuestionHint(java.lang.String) -> w
    boolean getThirdQuestionSkip(java.lang.String) -> x
    long setCurrBackground(java.lang.String,java.lang.String) -> c
    java.lang.String getCurrBackground(java.lang.String) -> y
    void checkUpgrade() -> h
com.jeffthefate.dmbquiz.LeaderAdapter -> com.jeffthefate.dmbquiz.e:
    android.content.Context mContext -> a
    java.lang.String userId -> b
    java.util.ArrayList rankList -> c
    java.util.ArrayList userList -> d
    java.util.ArrayList scoreList -> e
    java.util.ArrayList userIdList -> f
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jeffthefate.dmbquiz.LeaderAdapter$ViewHolder -> com.jeffthefate.dmbquiz.f:
    android.widget.TextView rank -> a
    android.widget.TextView text1 -> b
    android.widget.TextView text2 -> c
com.jeffthefate.dmbquiz.R -> com.jeffthefate.dmbquiz.g:
com.jeffthefate.dmbquiz.R$drawable -> com.jeffthefate.dmbquiz.h:
    int background_text -> background_text
    int button -> button
    int button_default -> button_default
    int button_disabled -> button_disabled
    int button_pressed -> button_pressed
    int com_facebook_button_check -> com_facebook_button_check
    int com_facebook_button_check_off -> com_facebook_button_check_off
    int com_facebook_button_check_on -> com_facebook_button_check_on
    int com_facebook_button_grey_focused -> com_facebook_button_grey_focused
    int com_facebook_button_grey_normal -> com_facebook_button_grey_normal
    int com_facebook_button_grey_pressed -> com_facebook_button_grey_pressed
    int com_facebook_close -> com_facebook_close
    int com_facebook_icon -> com_facebook_icon
    int com_facebook_list_divider -> com_facebook_list_divider
    int com_facebook_list_section_header_background -> com_facebook_list_section_header_background
    int com_facebook_loginbutton_blue -> com_facebook_loginbutton_blue
    int com_facebook_loginbutton_blue_focused -> com_facebook_loginbutton_blue_focused
    int com_facebook_loginbutton_blue_normal -> com_facebook_loginbutton_blue_normal
    int com_facebook_loginbutton_blue_pressed -> com_facebook_loginbutton_blue_pressed
    int com_facebook_loginbutton_silver -> com_facebook_loginbutton_silver
    int com_facebook_logo -> com_facebook_logo
    int com_facebook_picker_item_background -> com_facebook_picker_item_background
    int com_facebook_picker_list_focused -> com_facebook_picker_list_focused
    int com_facebook_picker_list_longpressed -> com_facebook_picker_list_longpressed
    int com_facebook_picker_list_pressed -> com_facebook_picker_list_pressed
    int com_facebook_picker_list_selector -> com_facebook_picker_list_selector
    int com_facebook_picker_list_selector_background_transition -> com_facebook_picker_list_selector_background_transition
    int com_facebook_picker_list_selector_disabled -> com_facebook_picker_list_selector_disabled
    int com_facebook_picker_top_button -> com_facebook_picker_top_button
    int com_facebook_place_default_icon -> com_facebook_place_default_icon
    int com_facebook_profile_default_icon -> com_facebook_profile_default_icon
    int com_facebook_profile_picture_blank_portrait -> com_facebook_profile_picture_blank_portrait
    int com_facebook_profile_picture_blank_square -> com_facebook_profile_picture_blank_square
    int com_facebook_top_background -> com_facebook_top_background
    int com_facebook_top_button -> com_facebook_top_button
    int com_facebook_usersettingsfragment_background_gradient -> com_facebook_usersettingsfragment_background_gradient
    int com_twitter_loginbutton_grey -> com_twitter_loginbutton_grey
    int com_twitter_loginbutton_grey_focused -> com_twitter_loginbutton_grey_focused
    int com_twitter_loginbutton_grey_normal -> com_twitter_loginbutton_grey_normal
    int com_twitter_loginbutton_grey_pressed -> com_twitter_loginbutton_grey_pressed
    int correct -> correct
    int edit_text -> edit_text
    int edit_text_default -> edit_text_default
    int ic_action_search -> ic_action_search
    int ic_launcher -> ic_launcher
    int notification_large -> notification_large
    int progress -> progress
    int splash1 -> splash1
    int splash10 -> splash10
    int splash11 -> splash11
    int splash12 -> splash12
    int splash13 -> splash13
    int splash14 -> splash14
    int splash15 -> splash15
    int splash16 -> splash16
    int splash2 -> splash2
    int splash3 -> splash3
    int splash4 -> splash4
    int splash5 -> splash5
    int splash6 -> splash6
    int splash7 -> splash7
    int splash8 -> splash8
    int splash9 -> splash9
    int title -> title
    int wrong -> wrong
com.jeffthefate.dmbquiz.R$raw -> com.jeffthefate.dmbquiz.i:
    int correct1 -> correct1
    int correct11 -> correct11
    int correct12 -> correct12
    int correct17 -> correct17
    int correct19 -> correct19
    int correct2 -> correct2
    int correct20 -> correct20
    int correct23 -> correct23
    int correct28 -> correct28
    int correct3 -> correct3
    int correct32 -> correct32
    int correct34 -> correct34
    int correct35 -> correct35
    int correct38 -> correct38
    int correct39 -> correct39
    int correct4 -> correct4
    int correct40 -> correct40
    int correct41 -> correct41
    int correct42 -> correct42
    int correct43 -> correct43
    int correct44 -> correct44
    int correct45 -> correct45
    int correct46 -> correct46
    int correct47 -> correct47
    int correct48 -> correct48
    int correct49 -> correct49
    int correct5 -> correct5
    int correct50 -> correct50
    int correct51 -> correct51
    int correct52 -> correct52
    int correct53 -> correct53
    int correct54 -> correct54
    int correct55 -> correct55
    int correct56 -> correct56
    int correct57 -> correct57
    int correct58 -> correct58
    int correct6 -> correct6
    int correct9 -> correct9
    int hint12 -> hint12
    int hint13 -> hint13
    int hint14 -> hint14
    int hint18 -> hint18
    int hint19 -> hint19
    int hint20 -> hint20
    int hint22 -> hint22
    int hint23 -> hint23
    int hint24 -> hint24
    int hint26 -> hint26
    int hint29 -> hint29
    int hint31 -> hint31
    int hint32 -> hint32
    int hint33 -> hint33
    int hint35 -> hint35
    int hint36 -> hint36
    int hint37 -> hint37
    int hint38 -> hint38
    int hint39 -> hint39
    int hint40 -> hint40
    int hint42 -> hint42
    int hint43 -> hint43
    int hint44 -> hint44
    int hint45 -> hint45
    int hint46 -> hint46
    int hint47 -> hint47
    int hint48 -> hint48
    int hint50 -> hint50
    int hint51 -> hint51
    int hint52 -> hint52
    int hint53 -> hint53
    int hint54 -> hint54
    int hint55 -> hint55
    int hint56 -> hint56
    int hint57 -> hint57
    int hint6 -> hint6
    int hint7 -> hint7
    int skip1 -> skip1
    int skip10 -> skip10
    int skip11 -> skip11
    int skip12 -> skip12
    int skip13 -> skip13
    int skip14 -> skip14
    int skip15 -> skip15
    int skip17 -> skip17
    int skip23 -> skip23
    int skip25 -> skip25
    int skip27 -> skip27
    int skip28 -> skip28
    int skip30 -> skip30
    int skip31 -> skip31
    int skip33 -> skip33
    int skip34 -> skip34
    int skip36 -> skip36
    int skip37 -> skip37
    int skip38 -> skip38
    int skip39 -> skip39
    int skip40 -> skip40
    int skip41 -> skip41
    int skip42 -> skip42
    int skip43 -> skip43
    int skip44 -> skip44
    int skip45 -> skip45
    int skip46 -> skip46
    int skip47 -> skip47
    int skip48 -> skip48
    int skip49 -> skip49
    int skip50 -> skip50
    int skip51 -> skip51
    int skip52 -> skip52
    int skip53 -> skip53
    int skip54 -> skip54
    int skip56 -> skip56
    int skip57 -> skip57
    int skip58 -> skip58
    int skip59 -> skip59
    int skip6 -> skip6
    int skip60 -> skip60
    int skip7 -> skip7
    int skip8 -> skip8
    int wrong1 -> wrong1
    int wrong15 -> wrong15
    int wrong16 -> wrong16
    int wrong17 -> wrong17
    int wrong18 -> wrong18
    int wrong19 -> wrong19
    int wrong2 -> wrong2
    int wrong23 -> wrong23
    int wrong24 -> wrong24
    int wrong27 -> wrong27
    int wrong28 -> wrong28
    int wrong29 -> wrong29
    int wrong31 -> wrong31
    int wrong32 -> wrong32
    int wrong33 -> wrong33
    int wrong36 -> wrong36
    int wrong37 -> wrong37
    int wrong38 -> wrong38
    int wrong39 -> wrong39
    int wrong4 -> wrong4
    int wrong40 -> wrong40
    int wrong41 -> wrong41
    int wrong42 -> wrong42
    int wrong43 -> wrong43
    int wrong44 -> wrong44
    int wrong45 -> wrong45
    int wrong47 -> wrong47
    int wrong48 -> wrong48
    int wrong49 -> wrong49
    int wrong5 -> wrong5
    int wrong50 -> wrong50
    int wrong51 -> wrong51
    int wrong52 -> wrong52
    int wrong55 -> wrong55
    int wrong58 -> wrong58
    int wrong6 -> wrong6
    int wrong60 -> wrong60
    int wrong61 -> wrong61
    int wrong62 -> wrong62
    int wrong63 -> wrong63
    int wrong64 -> wrong64
    int wrong65 -> wrong65
    int wrong66 -> wrong66
    int wrong67 -> wrong67
    int wrong70 -> wrong70
    int wrong72 -> wrong72
    int wrong8 -> wrong8
com.jeffthefate.dmbquiz.VersionedActionBar -> com.jeffthefate.dmbquiz.j:
    com.jeffthefate.dmbquiz.VersionedActionBar create(android.app.Activity) -> a
    void setDisplayHome() -> a
com.jeffthefate.dmbquiz.VersionedActionBar$GingerbreadActionBar -> com.jeffthefate.dmbquiz.k:
    com.jeffthefate.dmbquiz.VersionedActionBar create(android.app.Activity) -> a
    void setDisplayHome() -> a
com.jeffthefate.dmbquiz.VersionedActionBar$HoneycombActionBar -> com.jeffthefate.dmbquiz.l:
    android.app.ActionBar actionBar -> a
    com.jeffthefate.dmbquiz.VersionedActionBar create(android.app.Activity) -> a
    void setDisplayHome() -> a
com.jeffthefate.dmbquiz.activity.ActivityMain -> com.jeffthefate.dmbquiz.activity.ActivityMain:
    com.parse.ParseUser user -> n
    java.lang.String userId -> o
    android.widget.ImageView background -> p
    android.widget.TextView noConnection -> q
    android.support.v4.app.FragmentManager fMan -> m
    com.jeffthefate.dmbquiz.fragment.FragmentBase currFrag -> r
    int rawIndex -> s
    java.lang.reflect.Field[] fields -> t
    java.util.ArrayList fieldsList -> u
    java.lang.String currentBackground -> v
    boolean loggedIn -> w
    boolean isLogging -> x
    boolean inLoad -> y
    boolean inStats -> z
    boolean inInfo -> A
    java.lang.String questionId -> B
    java.lang.String question -> C
    java.lang.String correctAnswer -> D
    java.lang.String questionCategory -> E
    java.lang.String questionScore -> F
    boolean questionHint -> G
    boolean questionSkip -> H
    java.lang.String nextQuestionId -> I
    java.lang.String nextQuestion -> J
    java.lang.String nextCorrectAnswer -> K
    java.lang.String nextQuestionCategory -> L
    java.lang.String nextQuestionScore -> M
    boolean nextQuestionHint -> N
    boolean nextQuestionSkip -> O
    java.lang.String thirdQuestionId -> P
    java.lang.String thirdQuestion -> Q
    java.lang.String thirdCorrectAnswer -> R
    java.lang.String thirdQuestionCategory -> S
    java.lang.String thirdQuestionScore -> T
    boolean thirdQuestionHint -> U
    boolean thirdQuestionSkip -> V
    boolean newQuestion -> W
    com.jeffthefate.dmbquiz.activity.ActivityMain$GetStatsTask getStatsTask -> X
    com.jeffthefate.dmbquiz.activity.ActivityMain$GetScoreTask getScoreTask -> Y
    com.jeffthefate.dmbquiz.activity.ActivityMain$GetNextQuestionsTask getNextQuestionsTask -> Z
    com.jeffthefate.dmbquiz.activity.ActivityMain$GetStageTask getStageTask -> aa
    android.os.Bundle leadersBundle -> ab
    java.util.ArrayList rankList -> ac
    java.util.ArrayList userList -> ad
    java.util.ArrayList scoreList -> ae
    java.util.ArrayList userIdList -> af
    java.lang.String displayName -> ag
    int currScore -> ah
    int tempScore -> ai
    com.jeffthefate.dmbquiz.activity.ActivityMain$UserTask userTask -> aj
    java.util.ArrayList correctAnswers -> ak
    java.util.ArrayList tempAnswers -> al
    boolean networkProblem -> am
    boolean facebookLogin -> an
    boolean newUser -> ao
    android.app.NotificationManager nManager -> ap
    com.jeffthefate.dmbquiz.activity.ActivityMain$ConnectionReceiver connReceiver -> aq
    android.content.res.Resources res -> ar
    android.graphics.drawable.Drawable backgroundDrawable -> as
    android.graphics.drawable.Drawable tempDrawable -> at
    android.graphics.drawable.Drawable[] arrayDrawable -> au
    android.graphics.drawable.TransitionDrawable transitionDrawable -> av
    android.graphics.drawable.BitmapDrawable oldBitmapDrawable -> aw
    com.jeffthefate.dmbquiz.activity.ActivityMain$FacebookTask facebookTask -> ax
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onResume() -> onResume
    void onBackPressed() -> onBackPressed
    void onPause() -> onPause
    void setBackground(java.lang.String,boolean) -> a
    void checkUser() -> N
    void setupUser(boolean) -> b
    void getScore(boolean,boolean,java.lang.String,boolean) -> a
    void showLoggedInFragment() -> O
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onInfoPressed() -> d
    void onStatsPressed() -> e
    void onLoginPressed(int,java.lang.String,java.lang.String) -> a
    void resetPassword(java.lang.String) -> a
    java.lang.String getBackground() -> f
    void showScoreDialog() -> g
    void showNameDialog() -> h
    void logOut(boolean) -> c
    void showLeaders() -> P
    void showLogin() -> Q
    void showSplash() -> R
    void showQuiz() -> S
    android.os.Bundle getLeadersState() -> i
    void saveUserScore(int) -> c
    void getNextQuestions(boolean) -> d
    void next() -> j
    java.lang.String getQuestionId() -> k
    java.lang.String getQuestion() -> l
    java.lang.String getCorrectAnswer() -> m
    java.lang.String getQuestionScore() -> n
    boolean getQuestionHint() -> o
    void setQuestionId$552c4e01() -> p
    void setQuestion$552c4e01() -> q
    void setCorrectAnswer$552c4e01() -> r
    void setQuestionScore$552c4e01() -> s
    void setQuestionCategory$552c4e01() -> t
    void setQuestionHint$1385ff() -> u
    void setNextQuestionId$552c4e01() -> v
    void setNextQuestion$552c4e01() -> w
    void setNextCorrectAnswer$552c4e01() -> x
    void setNextQuestionScore$552c4e01() -> y
    void setNextQuestionCategory$552c4e01() -> z
    void setThirdQuestionId$552c4e01() -> A
    void setThirdQuestion$552c4e01() -> B
    void setThirdCorrectAnswer$552c4e01() -> C
    void setThirdQuestionScore$552c4e01() -> D
    void setThirdQuestionCategory$552c4e01() -> E
    java.lang.String getUserId() -> F
    java.lang.String getDisplayName() -> G
    boolean isNewQuestion() -> H
    void setIsNewQuestion$1385ff() -> I
    int getCurrentScore() -> J
    void addCurrentScore(int) -> d
    void shareScreenshot() -> K
    void setDisplayName(java.lang.String) -> b
    java.lang.String takeScreenshot() -> T
    void getUserData(java.lang.String) -> f
    boolean getNetworkProblem() -> L
    void setNetworkProblem(boolean) -> e
    void addCorrectAnswer(java.lang.String) -> c
    boolean isCorrectAnswer(java.lang.String) -> d
    void setUserName(java.lang.String) -> e
    boolean isNewUser() -> M
    android.content.res.Resources access$0(com.jeffthefate.dmbquiz.activity.ActivityMain) -> a
    java.util.ArrayList access$1(com.jeffthefate.dmbquiz.activity.ActivityMain) -> b
    void access$2(com.jeffthefate.dmbquiz.activity.ActivityMain,int) -> a
    int access$3(com.jeffthefate.dmbquiz.activity.ActivityMain) -> c
    void access$4(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> a
    java.lang.String access$5(com.jeffthefate.dmbquiz.activity.ActivityMain) -> d
    java.lang.String access$6(com.jeffthefate.dmbquiz.activity.ActivityMain) -> e
    void access$7(com.jeffthefate.dmbquiz.activity.ActivityMain,android.graphics.drawable.Drawable) -> a
    android.widget.ImageView access$8(com.jeffthefate.dmbquiz.activity.ActivityMain) -> f
    void access$9(com.jeffthefate.dmbquiz.activity.ActivityMain,android.graphics.drawable.Drawable) -> b
    void access$10(com.jeffthefate.dmbquiz.activity.ActivityMain,android.graphics.drawable.BitmapDrawable) -> a
    android.graphics.drawable.Drawable access$11(com.jeffthefate.dmbquiz.activity.ActivityMain) -> g
    void access$12(com.jeffthefate.dmbquiz.activity.ActivityMain,android.graphics.drawable.TransitionDrawable) -> a
    android.graphics.drawable.TransitionDrawable access$13(com.jeffthefate.dmbquiz.activity.ActivityMain) -> h
    android.graphics.drawable.Drawable[] access$14(com.jeffthefate.dmbquiz.activity.ActivityMain) -> i
    android.graphics.drawable.BitmapDrawable access$15(com.jeffthefate.dmbquiz.activity.ActivityMain) -> j
    android.graphics.drawable.Drawable access$16(com.jeffthefate.dmbquiz.activity.ActivityMain) -> k
    com.jeffthefate.dmbquiz.fragment.FragmentBase access$17(com.jeffthefate.dmbquiz.activity.ActivityMain) -> l
    void access$18(com.jeffthefate.dmbquiz.activity.ActivityMain,com.parse.ParseUser) -> a
    com.parse.ParseUser access$19(com.jeffthefate.dmbquiz.activity.ActivityMain) -> m
    com.jeffthefate.dmbquiz.activity.ActivityMain$GetScoreTask access$20(com.jeffthefate.dmbquiz.activity.ActivityMain) -> n
    java.util.ArrayList access$21(com.jeffthefate.dmbquiz.activity.ActivityMain) -> o
    void access$22(com.jeffthefate.dmbquiz.activity.ActivityMain,java.util.ArrayList) -> a
    java.util.ArrayList access$23(com.jeffthefate.dmbquiz.activity.ActivityMain) -> p
    void access$24(com.jeffthefate.dmbquiz.activity.ActivityMain,java.util.ArrayList) -> b
    java.lang.String access$25(com.jeffthefate.dmbquiz.activity.ActivityMain) -> q
    void access$26(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> b
    void access$27$32b05c36(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String,boolean) -> a
    int access$28(com.jeffthefate.dmbquiz.activity.ActivityMain) -> r
    void access$29(com.jeffthefate.dmbquiz.activity.ActivityMain,int) -> b
    com.jeffthefate.dmbquiz.activity.ActivityMain$UserTask access$30(com.jeffthefate.dmbquiz.activity.ActivityMain) -> s
    void access$31(com.jeffthefate.dmbquiz.activity.ActivityMain,int) -> c
    int access$32(com.jeffthefate.dmbquiz.activity.ActivityMain) -> t
    java.lang.String access$33(com.jeffthefate.dmbquiz.activity.ActivityMain) -> u
    void access$34(com.jeffthefate.dmbquiz.activity.ActivityMain) -> v
    void access$35(com.jeffthefate.dmbquiz.activity.ActivityMain) -> w
    boolean access$36(com.jeffthefate.dmbquiz.activity.ActivityMain) -> x
    boolean access$37(com.jeffthefate.dmbquiz.activity.ActivityMain) -> y
    void access$38(com.jeffthefate.dmbquiz.activity.ActivityMain) -> z
    void access$39$2e5012c(com.jeffthefate.dmbquiz.activity.ActivityMain) -> A
    com.jeffthefate.dmbquiz.activity.ActivityMain$FacebookTask access$40(com.jeffthefate.dmbquiz.activity.ActivityMain) -> B
    com.jeffthefate.dmbquiz.activity.ActivityMain$GetNextQuestionsTask access$41(com.jeffthefate.dmbquiz.activity.ActivityMain) -> C
    com.jeffthefate.dmbquiz.activity.ActivityMain$GetStageTask access$42(com.jeffthefate.dmbquiz.activity.ActivityMain) -> D
    com.jeffthefate.dmbquiz.activity.ActivityMain$GetStatsTask access$43(com.jeffthefate.dmbquiz.activity.ActivityMain) -> E
    boolean access$44(com.jeffthefate.dmbquiz.activity.ActivityMain) -> F
    void access$45(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> c
    void access$46$2e5012c(com.jeffthefate.dmbquiz.activity.ActivityMain) -> G
    void access$47(com.jeffthefate.dmbquiz.activity.ActivityMain) -> H
    void access$48(com.jeffthefate.dmbquiz.activity.ActivityMain,android.os.Bundle) -> a
    android.os.Bundle access$49(com.jeffthefate.dmbquiz.activity.ActivityMain) -> I
    void access$50$2e5012c(com.jeffthefate.dmbquiz.activity.ActivityMain) -> J
    boolean access$51(com.jeffthefate.dmbquiz.activity.ActivityMain) -> K
    void access$52$2e5012c(com.jeffthefate.dmbquiz.activity.ActivityMain) -> L
    boolean access$53(com.jeffthefate.dmbquiz.activity.ActivityMain) -> M
    void access$54(com.jeffthefate.dmbquiz.activity.ActivityMain) -> N
    void access$55(com.jeffthefate.dmbquiz.activity.ActivityMain,java.util.ArrayList) -> c
    void access$56(com.jeffthefate.dmbquiz.activity.ActivityMain,java.util.ArrayList) -> d
    void access$57(com.jeffthefate.dmbquiz.activity.ActivityMain,java.util.ArrayList) -> e
    void access$58(com.jeffthefate.dmbquiz.activity.ActivityMain,java.util.ArrayList) -> f
    java.util.ArrayList access$59(com.jeffthefate.dmbquiz.activity.ActivityMain) -> O
    java.util.ArrayList access$60(com.jeffthefate.dmbquiz.activity.ActivityMain) -> P
    java.util.ArrayList access$61(com.jeffthefate.dmbquiz.activity.ActivityMain) -> Q
    java.util.ArrayList access$62(com.jeffthefate.dmbquiz.activity.ActivityMain) -> R
    java.lang.String access$63(com.jeffthefate.dmbquiz.activity.ActivityMain) -> S
    java.lang.String access$64(com.jeffthefate.dmbquiz.activity.ActivityMain) -> T
    void access$65(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> d
    void access$66(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> e
    void access$67(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> f
    void access$68(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> g
    void access$69(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> h
    void access$70(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> i
    void access$71(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> j
    void access$72(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> k
    void access$73(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> l
    void access$74(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> m
    void access$75(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> n
    void access$76(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> o
    void access$77(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> p
    void access$78(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> q
    void access$79(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String) -> r
    void access$80(com.jeffthefate.dmbquiz.activity.ActivityMain,java.lang.String,java.util.ArrayList) -> a
    java.lang.String access$81(com.jeffthefate.dmbquiz.activity.ActivityMain) -> U
    java.lang.String access$82(com.jeffthefate.dmbquiz.activity.ActivityMain) -> V
    java.lang.String access$83(com.jeffthefate.dmbquiz.activity.ActivityMain) -> W
    java.lang.String access$84(com.jeffthefate.dmbquiz.activity.ActivityMain) -> X
    boolean access$85(com.jeffthefate.dmbquiz.activity.ActivityMain) -> Y
    boolean access$86(com.jeffthefate.dmbquiz.activity.ActivityMain) -> Z
    java.lang.String access$87(com.jeffthefate.dmbquiz.activity.ActivityMain) -> aa
    java.lang.String access$88(com.jeffthefate.dmbquiz.activity.ActivityMain) -> ab
    java.lang.String access$89(com.jeffthefate.dmbquiz.activity.ActivityMain) -> ac
    java.lang.String access$90(com.jeffthefate.dmbquiz.activity.ActivityMain) -> ad
    boolean access$91(com.jeffthefate.dmbquiz.activity.ActivityMain) -> ae
    boolean access$92(com.jeffthefate.dmbquiz.activity.ActivityMain) -> af
    java.lang.String access$93(com.jeffthefate.dmbquiz.activity.ActivityMain) -> ag
    java.lang.String access$94(com.jeffthefate.dmbquiz.activity.ActivityMain) -> ah
    java.lang.String access$95(com.jeffthefate.dmbquiz.activity.ActivityMain) -> ai
    java.lang.String access$96(com.jeffthefate.dmbquiz.activity.ActivityMain) -> aj
    boolean access$97(com.jeffthefate.dmbquiz.activity.ActivityMain) -> ak
    boolean access$98(com.jeffthefate.dmbquiz.activity.ActivityMain) -> al
    void access$99(com.jeffthefate.dmbquiz.activity.ActivityMain,boolean) -> a
    void access$100(com.jeffthefate.dmbquiz.activity.ActivityMain,boolean) -> b
    void access$101(com.jeffthefate.dmbquiz.activity.ActivityMain,boolean) -> c
    void access$102(com.jeffthefate.dmbquiz.activity.ActivityMain,boolean) -> d
    void access$103(com.jeffthefate.dmbquiz.activity.ActivityMain,boolean) -> e
    void access$104(com.jeffthefate.dmbquiz.activity.ActivityMain,boolean) -> f
    void access$105(com.jeffthefate.dmbquiz.activity.ActivityMain,boolean) -> g
    void access$106(com.jeffthefate.dmbquiz.activity.ActivityMain,com.jeffthefate.dmbquiz.activity.ActivityMain$FacebookTask) -> a
    void access$107$2e5012c(com.jeffthefate.dmbquiz.activity.ActivityMain) -> am
com.jeffthefate.dmbquiz.activity.ActivityMain$1 -> com.jeffthefate.dmbquiz.activity.a:
    com.jeffthefate.dmbquiz.activity.ActivityMain this$0 -> a
    void done(com.parse.ParseObject,com.parse.ParseException) -> a
com.jeffthefate.dmbquiz.activity.ActivityMain$2 -> com.jeffthefate.dmbquiz.activity.b:
    com.jeffthefate.dmbquiz.activity.ActivityMain this$0 -> a
    void done(com.parse.ParseUser,com.parse.ParseException) -> a
com.jeffthefate.dmbquiz.activity.ActivityMain$3 -> com.jeffthefate.dmbquiz.activity.c:
    com.jeffthefate.dmbquiz.activity.ActivityMain this$0 -> a
    void done(com.parse.ParseUser,com.parse.ParseException) -> a
com.jeffthefate.dmbquiz.activity.ActivityMain$4 -> com.jeffthefate.dmbquiz.activity.d:
    com.jeffthefate.dmbquiz.activity.ActivityMain this$0 -> a
    void done(com.parse.ParseUser,com.parse.ParseException) -> a
com.jeffthefate.dmbquiz.activity.ActivityMain$4$1 -> com.jeffthefate.dmbquiz.activity.e:
    com.jeffthefate.dmbquiz.activity.ActivityMain$4 this$1 -> a
    com.parse.ParseUser val$user -> b
    void done(com.parse.ParseException) -> a
com.jeffthefate.dmbquiz.activity.ActivityMain$5 -> com.jeffthefate.dmbquiz.activity.f:
    com.jeffthefate.dmbquiz.activity.ActivityMain this$0 -> a
    com.parse.ParseUser val$user -> b
    void done(com.parse.ParseException) -> a
com.jeffthefate.dmbquiz.activity.ActivityMain$6 -> com.jeffthefate.dmbquiz.activity.g:
    com.jeffthefate.dmbquiz.activity.ActivityMain this$0 -> a
    java.lang.String val$username -> b
    void done(com.parse.ParseUser,com.parse.ParseException) -> a
com.jeffthefate.dmbquiz.activity.ActivityMain$7 -> com.jeffthefate.dmbquiz.activity.h:
    com.jeffthefate.dmbquiz.activity.ActivityMain this$0 -> a
    void done(com.parse.ParseException) -> a
com.jeffthefate.dmbquiz.activity.ActivityMain$BackgroundTask -> com.jeffthefate.dmbquiz.activity.i:
    java.lang.String questionId -> b
    com.jeffthefate.dmbquiz.activity.ActivityMain this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.jeffthefate.dmbquiz.activity.ActivityMain$ConnectionReceiver -> com.jeffthefate.dmbquiz.activity.j:
    boolean wifiEnabled -> a
    com.jeffthefate.dmbquiz.activity.ActivityMain this$0 -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.jeffthefate.dmbquiz.activity.ActivityMain$FacebookTask -> com.jeffthefate.dmbquiz.activity.k:
    com.parse.ParseUser user -> a
    com.jeffthefate.dmbquiz.activity.ActivityMain this$0 -> b
    java.lang.Void doInBackground$10299ca() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.jeffthefate.dmbquiz.activity.ActivityMain$GetNextQuestionsTask -> com.jeffthefate.dmbquiz.activity.l:
    int count -> a
    java.util.List questionList -> b
    com.parse.ParseException error -> c
    boolean questionNull -> d
    java.util.ArrayList stageList -> e
    boolean force -> f
    com.jeffthefate.dmbquiz.activity.ActivityMain this$0 -> g
    java.lang.Void doInBackground$10299ca() -> a
    void updateIds() -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.jeffthefate.dmbquiz.activity.ActivityMain$GetScoreTask -> com.jeffthefate.dmbquiz.activity.m:
    boolean show -> b
    boolean restore -> c
    java.lang.String userId -> d
    boolean newUser -> e
    java.util.List scoreList -> f
    java.util.List deleteList -> g
    java.lang.Number number -> h
    com.jeffthefate.dmbquiz.activity.ActivityMain this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground$10299ca() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.jeffthefate.dmbquiz.activity.ActivityMain$GetStageTask -> com.jeffthefate.dmbquiz.activity.n:
    java.lang.String userId -> c
    java.util.ArrayList questionIds -> a
    com.jeffthefate.dmbquiz.activity.ActivityMain this$0 -> b
    java.lang.Void doInBackground$10299ca() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.jeffthefate.dmbquiz.activity.ActivityMain$GetStatsTask -> com.jeffthefate.dmbquiz.activity.o:
    int currScore -> a
    com.parse.ParseException error -> b
    int hints -> c
    com.jeffthefate.dmbquiz.activity.ActivityMain this$0 -> d
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground$10299ca() -> a
    void getLeaders(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.jeffthefate.dmbquiz.activity.ActivityMain$LogOutTask -> com.jeffthefate.dmbquiz.activity.p:
    boolean force -> a
    com.jeffthefate.dmbquiz.activity.ActivityMain this$0 -> b
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.jeffthefate.dmbquiz.activity.ActivityMain$SetBackgroundTask -> com.jeffthefate.dmbquiz.activity.q:
    java.lang.String name -> b
    boolean showNew -> c
    int resourceId -> d
    com.jeffthefate.dmbquiz.activity.ActivityMain this$0 -> a
    java.lang.Void doInBackground$10299ca() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.jeffthefate.dmbquiz.activity.ActivityMain$UserTask -> com.jeffthefate.dmbquiz.activity.r:
    boolean newUser -> b
    com.jeffthefate.dmbquiz.activity.ActivityMain this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.jeffthefate.dmbquiz.fragment.FragmentBase -> com.jeffthefate.dmbquiz.a.a:
    com.jeffthefate.dmbquiz.fragment.FragmentBase$OnButtonListener mCallback -> a
    android.content.res.Resources res -> b
    android.content.SharedPreferences sharedPrefs -> c
    android.media.AudioManager$OnAudioFocusChangeListener afChangeListener -> d
    java.lang.reflect.Field[] fields -> e
    int rawIndex -> f
    int currentAudio -> g
    android.media.MediaPlayer mediaPlayer -> h
    android.media.AudioManager audioManager -> i
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    void showNetworkProblem() -> b
    void showNoMoreQuestions() -> z
    android.content.Intent getOpenFacebookIntent() -> A
    void playAudio(java.lang.String) -> a
    void onPause() -> p
    void updateScoreText() -> B
    void resumeQuestion() -> C
    void showLoading(java.lang.String) -> b
    void disableButton$1385ff() -> D
    void enableButton$1385ff() -> E
    void setDisplayName(java.lang.String) -> c
    android.media.MediaPlayer access$0(com.jeffthefate.dmbquiz.fragment.FragmentBase) -> a
    android.media.AudioManager access$1(com.jeffthefate.dmbquiz.fragment.FragmentBase) -> b
com.jeffthefate.dmbquiz.fragment.FragmentBase$1 -> com.jeffthefate.dmbquiz.a.b:
    com.jeffthefate.dmbquiz.fragment.FragmentBase this$0 -> a
    void onAudioFocusChange(int) -> onAudioFocusChange
com.jeffthefate.dmbquiz.fragment.FragmentBase$2 -> com.jeffthefate.dmbquiz.a.c:
    com.jeffthefate.dmbquiz.fragment.FragmentBase this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.jeffthefate.dmbquiz.fragment.FragmentBase$3 -> com.jeffthefate.dmbquiz.a.d:
    com.jeffthefate.dmbquiz.fragment.FragmentBase this$0 -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.jeffthefate.dmbquiz.fragment.FragmentBase$OnButtonListener -> com.jeffthefate.dmbquiz.a.e:
    void setBackground(java.lang.String,boolean) -> a
    java.lang.String getBackground() -> f
    void onInfoPressed() -> d
    void onStatsPressed() -> e
    void onLoginPressed(int,java.lang.String,java.lang.String) -> a
    void setupUser(boolean) -> b
    void showScoreDialog() -> g
    void showNameDialog() -> h
    void logOut(boolean) -> c
    android.os.Bundle getLeadersState() -> i
    void next() -> j
    java.lang.String getQuestionId() -> k
    void setQuestionId$552c4e01() -> p
    java.lang.String getQuestion() -> l
    void setQuestion$552c4e01() -> q
    java.lang.String getCorrectAnswer() -> m
    void setCorrectAnswer$552c4e01() -> r
    java.lang.String getQuestionScore() -> n
    void setQuestionScore$552c4e01() -> s
    void setQuestionCategory$552c4e01() -> t
    boolean getQuestionHint() -> o
    void setQuestionHint$1385ff() -> u
    void setNextQuestionId$552c4e01() -> v
    void setNextQuestion$552c4e01() -> w
    void setNextCorrectAnswer$552c4e01() -> x
    void setNextQuestionScore$552c4e01() -> y
    void setNextQuestionCategory$552c4e01() -> z
    void setThirdQuestionId$552c4e01() -> A
    void setThirdQuestion$552c4e01() -> B
    void setThirdCorrectAnswer$552c4e01() -> C
    void setThirdQuestionScore$552c4e01() -> D
    void setThirdQuestionCategory$552c4e01() -> E
    void getNextQuestions(boolean) -> d
    java.lang.String getUserId() -> F
    java.lang.String getDisplayName() -> G
    boolean isNewQuestion() -> H
    void setIsNewQuestion$1385ff() -> I
    int getCurrentScore() -> J
    void addCurrentScore(int) -> d
    void shareScreenshot() -> K
    boolean getNetworkProblem() -> L
    void setNetworkProblem(boolean) -> e
    void saveUserScore(int) -> c
    void addCorrectAnswer(java.lang.String) -> c
    boolean isCorrectAnswer(java.lang.String) -> d
    void setUserName(java.lang.String) -> e
    boolean isNewUser() -> M
    void resetPassword(java.lang.String) -> a
com.jeffthefate.dmbquiz.fragment.FragmentInfo -> com.jeffthefate.dmbquiz.a.f:
    android.widget.TextView infoText -> e
    android.widget.Button doneButton -> f
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
com.jeffthefate.dmbquiz.fragment.FragmentInfo$1 -> com.jeffthefate.dmbquiz.a.g:
    com.jeffthefate.dmbquiz.fragment.FragmentInfo this$0 -> a
    void onClick(android.view.View) -> onClick
com.jeffthefate.dmbquiz.fragment.FragmentLeaders -> com.jeffthefate.dmbquiz.a.h:
    int answerCount -> e
    int hintCount -> f
    android.view.ViewGroup leadersLayout -> g
    android.widget.TextView userText -> h
    android.widget.TextView userAnswerText -> i
    android.widget.TextView userAnswers -> W
    android.widget.TextView userHintText -> X
    android.widget.TextView userHints -> Y
    android.widget.TextView leaderText -> Z
    android.widget.ListView leaderList -> aa
    android.widget.TextView userName -> ab
    android.widget.TextView userScore -> ac
    android.widget.TextView createdText -> ad
    android.widget.TextView createdDate -> ae
    java.util.ArrayList rankList -> af
    java.util.ArrayList userList -> ag
    java.util.ArrayList scoreList -> ah
    java.util.ArrayList userIdList -> ai
    android.content.res.Resources res -> aj
    boolean isRestored -> ak
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onSaveInstanceState(android.os.Bundle) -> d
    void onPause() -> p
    void onResume() -> o
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void setDisplayName(java.lang.String) -> c
com.jeffthefate.dmbquiz.fragment.FragmentLoad -> com.jeffthefate.dmbquiz.a.i:
    android.widget.ProgressBar progress -> e
    android.widget.TextView networkText -> f
    android.widget.TextView loadingText -> g
    android.widget.Button retryButton -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> o
    void showNetworkProblem() -> b
    void showLoading(java.lang.String) -> b
    void disableButton$1385ff() -> D
    void enableButton$1385ff() -> E
com.jeffthefate.dmbquiz.fragment.FragmentLoad$1 -> com.jeffthefate.dmbquiz.a.j:
    com.jeffthefate.dmbquiz.fragment.FragmentLoad this$0 -> a
    void onClick(android.view.View) -> onClick
com.jeffthefate.dmbquiz.fragment.FragmentLogin -> com.jeffthefate.dmbquiz.a.k:
    android.widget.ProgressBar progress -> e
    android.widget.TextView networkText -> f
    android.widget.TextView loadingText -> g
    android.widget.Button retryButton -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> o
    void showNetworkProblem() -> b
    void showLoading(java.lang.String) -> b
    void disableButton$1385ff() -> D
    void enableButton$1385ff() -> E
    android.widget.TextView access$0(com.jeffthefate.dmbquiz.fragment.FragmentLogin) -> a
    android.widget.Button access$1(com.jeffthefate.dmbquiz.fragment.FragmentLogin) -> b
    android.widget.ProgressBar access$2(com.jeffthefate.dmbquiz.fragment.FragmentLogin) -> c
com.jeffthefate.dmbquiz.fragment.FragmentLogin$1 -> com.jeffthefate.dmbquiz.a.l:
    com.jeffthefate.dmbquiz.fragment.FragmentLogin this$0 -> a
    void onClick(android.view.View) -> onClick
com.jeffthefate.dmbquiz.fragment.FragmentNameDialog -> com.jeffthefate.dmbquiz.a.m:
    com.jeffthefate.dmbquiz.activity.ActivityMain mActivity -> W
    void onAttach(android.app.Activity) -> a
    android.app.Dialog onCreateDialog$5709b310() -> b
    com.jeffthefate.dmbquiz.activity.ActivityMain access$0(com.jeffthefate.dmbquiz.fragment.FragmentNameDialog) -> a
com.jeffthefate.dmbquiz.fragment.FragmentNameDialog$1 -> com.jeffthefate.dmbquiz.a.n:
    com.jeffthefate.dmbquiz.fragment.FragmentNameDialog this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.jeffthefate.dmbquiz.fragment.FragmentNameDialog$2 -> com.jeffthefate.dmbquiz.a.o:
    com.jeffthefate.dmbquiz.fragment.FragmentNameDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.jeffthefate.dmbquiz.fragment.FragmentNameDialog$3 -> com.jeffthefate.dmbquiz.a.p:
    com.jeffthefate.dmbquiz.fragment.FragmentNameDialog this$0 -> a
    android.widget.EditText val$newName -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.jeffthefate.dmbquiz.fragment.FragmentQuiz -> com.jeffthefate.dmbquiz.a.q:
    android.widget.TextView scoreText -> e
    android.widget.TextView questionText -> f
    android.widget.EditText answerText -> g
    android.widget.TextView answerPlace -> h
    android.widget.Button answerButton -> i
    android.widget.RelativeLayout skipButton -> W
    android.widget.TextView skipText -> X
    android.widget.TextView skipTime -> Y
    android.widget.RelativeLayout hintButton -> Z
    android.widget.TextView hintText -> aa
    android.widget.TextView hintTime -> ab
    android.widget.ImageView answerImage -> ac
    android.widget.TextView retryText -> ad
    android.widget.Button retryButton -> ae
    long skipTick -> af
    long hintTick -> ag
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz$SkipTimer skipTimer -> ah
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz$HintTimer hintTimer -> ai
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz$WrongTimer wrongTimer -> aj
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz$HintTask hintTask -> ak
    java.lang.String savedHint -> al
    int currScore -> am
    boolean hintPressed -> an
    boolean skipPressed -> ao
    boolean isCorrect -> ap
    java.lang.String answerTextHint -> aq
    android.view.inputmethod.InputMethodManager imm -> ar
    boolean loggingOut -> as
    void onCreate(android.os.Bundle) -> a
    void disableButton$1385ff() -> D
    void enableButton$1385ff() -> E
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void resumeQuestion() -> C
    void onResume() -> o
    void onPause() -> p
    void onSaveInstanceState(android.os.Bundle) -> d
    void showNoMoreQuestions() -> z
    void showNetworkProblem() -> b
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void updateScoreText() -> B
    void calculateCurrentScore() -> F
    android.widget.ImageView access$0(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> a
    android.widget.TextView access$1(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> b
    android.widget.TextView access$2(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> c
    android.widget.TextView access$3(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> d
    void access$4(com.jeffthefate.dmbquiz.fragment.FragmentQuiz,long) -> a
    long access$5(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> e
    android.widget.RelativeLayout access$6(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> f
    android.widget.TextView access$7(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> g
    android.widget.TextView access$8(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> h
    void access$9(com.jeffthefate.dmbquiz.fragment.FragmentQuiz,long) -> b
    long access$10(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> i
    boolean access$11(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> j
    android.widget.RelativeLayout access$12(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> k
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz$SkipTimer access$13(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> l
    void access$14(com.jeffthefate.dmbquiz.fragment.FragmentQuiz,com.jeffthefate.dmbquiz.fragment.FragmentQuiz$SkipTimer) -> a
    void access$15(com.jeffthefate.dmbquiz.fragment.FragmentQuiz,boolean) -> a
    boolean access$16(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> m
    void access$17(com.jeffthefate.dmbquiz.fragment.FragmentQuiz,boolean) -> b
    boolean access$18(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> n
    void access$19(com.jeffthefate.dmbquiz.fragment.FragmentQuiz,java.lang.String) -> a
    void access$20(com.jeffthefate.dmbquiz.fragment.FragmentQuiz,boolean) -> c
    android.widget.EditText access$21(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> o
    android.widget.Button access$22(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> p
    void access$23(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> q
    int access$24(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> r
    void access$25(com.jeffthefate.dmbquiz.fragment.FragmentQuiz,java.lang.String) -> b
    java.lang.String access$26(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> s
    android.widget.TextView access$27(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> t
    java.lang.String access$28(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> u
    android.view.inputmethod.InputMethodManager access$29(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> v
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz$WrongTimer access$30(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> w
    android.widget.TextView access$31(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> x
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz$HintTimer access$32(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> y
    void access$33(com.jeffthefate.dmbquiz.fragment.FragmentQuiz,com.jeffthefate.dmbquiz.fragment.FragmentQuiz$WrongTimer) -> a
    void access$34(com.jeffthefate.dmbquiz.fragment.FragmentQuiz,boolean) -> d
    void access$35(com.jeffthefate.dmbquiz.fragment.FragmentQuiz,java.lang.String,java.lang.String,boolean) -> a
    void access$36(com.jeffthefate.dmbquiz.fragment.FragmentQuiz) -> z
com.jeffthefate.dmbquiz.fragment.FragmentQuiz$1 -> com.jeffthefate.dmbquiz.a.r:
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz this$0 -> a
    void onClick(android.view.View) -> onClick
com.jeffthefate.dmbquiz.fragment.FragmentQuiz$2 -> com.jeffthefate.dmbquiz.a.s:
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.jeffthefate.dmbquiz.fragment.FragmentQuiz$3 -> com.jeffthefate.dmbquiz.a.t:
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.jeffthefate.dmbquiz.fragment.FragmentQuiz$4 -> com.jeffthefate.dmbquiz.a.u:
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz this$0 -> a
    void onClick(android.view.View) -> onClick
com.jeffthefate.dmbquiz.fragment.FragmentQuiz$5 -> com.jeffthefate.dmbquiz.a.v:
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz this$0 -> a
    void onClick(android.view.View) -> onClick
com.jeffthefate.dmbquiz.fragment.FragmentQuiz$6 -> com.jeffthefate.dmbquiz.a.w:
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz this$0 -> a
    void onClick(android.view.View) -> onClick
com.jeffthefate.dmbquiz.fragment.FragmentQuiz$7 -> com.jeffthefate.dmbquiz.a.x:
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz this$0 -> a
    void onClick(android.view.View) -> onClick
com.jeffthefate.dmbquiz.fragment.FragmentQuiz$8 -> com.jeffthefate.dmbquiz.a.y:
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz this$0 -> a
    boolean val$isSkip -> b
    void done(com.parse.ParseObject,com.parse.ParseException) -> a
com.jeffthefate.dmbquiz.fragment.FragmentQuiz$9 -> com.jeffthefate.dmbquiz.a.z:
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz this$0 -> a
    java.lang.String val$questionId -> b
    java.lang.String val$userId -> c
    boolean val$questionHint -> d
    void done(com.parse.ParseObject,com.parse.ParseException) -> a
com.jeffthefate.dmbquiz.fragment.FragmentQuiz$HintTask -> com.jeffthefate.dmbquiz.a.aa:
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz this$0 -> a
    void onCancelled(java.lang.Object) -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.jeffthefate.dmbquiz.fragment.FragmentQuiz$HintTimer -> com.jeffthefate.dmbquiz.a.ab:
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz this$0 -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.jeffthefate.dmbquiz.fragment.FragmentQuiz$NextTask -> com.jeffthefate.dmbquiz.a.ac:
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.jeffthefate.dmbquiz.fragment.FragmentQuiz$SkipTimer -> com.jeffthefate.dmbquiz.a.ad:
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz this$0 -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.jeffthefate.dmbquiz.fragment.FragmentQuiz$VerifyTask -> com.jeffthefate.dmbquiz.a.ae:
    java.lang.String userId -> b
    java.lang.String questionId -> c
    boolean questionHint -> d
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    java.lang.String access$3(com.jeffthefate.dmbquiz.fragment.FragmentQuiz$VerifyTask) -> a
    java.lang.String access$4(com.jeffthefate.dmbquiz.fragment.FragmentQuiz$VerifyTask) -> b
    boolean access$5(com.jeffthefate.dmbquiz.fragment.FragmentQuiz$VerifyTask) -> c
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz access$7(com.jeffthefate.dmbquiz.fragment.FragmentQuiz$VerifyTask) -> d
com.jeffthefate.dmbquiz.fragment.FragmentQuiz$VerifyTask$1 -> com.jeffthefate.dmbquiz.a.af:
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz$VerifyTask this$1 -> a
    void done(com.parse.ParseObject,com.parse.ParseException) -> a
com.jeffthefate.dmbquiz.fragment.FragmentQuiz$WrongTimer -> com.jeffthefate.dmbquiz.a.ag:
    com.jeffthefate.dmbquiz.fragment.FragmentQuiz this$0 -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.jeffthefate.dmbquiz.fragment.FragmentScoreDialog -> com.jeffthefate.dmbquiz.a.ah:
    android.app.Dialog onCreateDialog$5709b310() -> b
com.jeffthefate.dmbquiz.fragment.FragmentScoreDialog$1 -> com.jeffthefate.dmbquiz.a.ai:
    com.jeffthefate.dmbquiz.fragment.FragmentScoreDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.jeffthefate.dmbquiz.fragment.FragmentSplash -> com.jeffthefate.dmbquiz.a.aj:
    android.widget.EditText loginUsername -> e
    android.widget.EditText loginPassword -> f
    android.widget.RelativeLayout emailButtonLayout -> g
    android.widget.LinearLayout buttonLayout -> h
    android.widget.TextView loginButton -> i
    android.widget.TextView signupButton -> W
    android.widget.TextView resetButton -> X
    android.widget.ImageView facebookLogin -> Y
    android.widget.ImageView twitterLogin -> Z
    android.widget.TextView playButton -> aa
    android.widget.TextView emailButton -> ab
    android.widget.LinearLayout emailLayout -> ac
    java.lang.String username -> ad
    java.lang.String password -> ae
    boolean isSignedUp -> af
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onCreate(android.os.Bundle) -> a
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    android.content.Intent getOpenFacebookIntent(android.content.Context) -> a
    void access$0(com.jeffthefate.dmbquiz.fragment.FragmentSplash,java.lang.String) -> a
    boolean access$1(com.jeffthefate.dmbquiz.fragment.FragmentSplash) -> a
    void access$2(com.jeffthefate.dmbquiz.fragment.FragmentSplash,boolean) -> a
    android.widget.EditText access$3(com.jeffthefate.dmbquiz.fragment.FragmentSplash) -> b
    android.widget.TextView access$4(com.jeffthefate.dmbquiz.fragment.FragmentSplash) -> c
    android.widget.TextView access$5(com.jeffthefate.dmbquiz.fragment.FragmentSplash) -> d
    android.widget.LinearLayout access$6(com.jeffthefate.dmbquiz.fragment.FragmentSplash) -> e
    android.widget.LinearLayout access$7(com.jeffthefate.dmbquiz.fragment.FragmentSplash) -> f
    android.widget.RelativeLayout access$8(com.jeffthefate.dmbquiz.fragment.FragmentSplash) -> g
    android.widget.TextView access$9(com.jeffthefate.dmbquiz.fragment.FragmentSplash) -> h
    android.widget.TextView access$10(com.jeffthefate.dmbquiz.fragment.FragmentSplash) -> i
    android.widget.TextView access$11(com.jeffthefate.dmbquiz.fragment.FragmentSplash) -> j
    void access$12(com.jeffthefate.dmbquiz.fragment.FragmentSplash,boolean) -> b
com.jeffthefate.dmbquiz.fragment.FragmentSplash$1 -> com.jeffthefate.dmbquiz.a.ak:
    com.jeffthefate.dmbquiz.fragment.FragmentSplash this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.jeffthefate.dmbquiz.fragment.FragmentSplash$10 -> com.jeffthefate.dmbquiz.a.al:
    com.jeffthefate.dmbquiz.fragment.FragmentSplash this$0 -> a
    void onClick(android.view.View) -> onClick
com.jeffthefate.dmbquiz.fragment.FragmentSplash$11 -> com.jeffthefate.dmbquiz.a.am:
    com.jeffthefate.dmbquiz.fragment.FragmentSplash this$0 -> a
    void done(java.util.List,com.parse.ParseException) -> a
com.jeffthefate.dmbquiz.fragment.FragmentSplash$2 -> com.jeffthefate.dmbquiz.a.an:
    com.jeffthefate.dmbquiz.fragment.FragmentSplash this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.jeffthefate.dmbquiz.fragment.FragmentSplash$3 -> com.jeffthefate.dmbquiz.a.ao:
    com.jeffthefate.dmbquiz.fragment.FragmentSplash this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.jeffthefate.dmbquiz.fragment.FragmentSplash$4 -> com.jeffthefate.dmbquiz.a.ap:
    com.jeffthefate.dmbquiz.fragment.FragmentSplash this$0 -> a
    void onClick(android.view.View) -> onClick
com.jeffthefate.dmbquiz.fragment.FragmentSplash$5 -> com.jeffthefate.dmbquiz.a.aq:
    com.jeffthefate.dmbquiz.fragment.FragmentSplash this$0 -> a
    void onClick(android.view.View) -> onClick
com.jeffthefate.dmbquiz.fragment.FragmentSplash$6 -> com.jeffthefate.dmbquiz.a.ar:
    com.jeffthefate.dmbquiz.fragment.FragmentSplash this$0 -> a
    void onClick(android.view.View) -> onClick
com.jeffthefate.dmbquiz.fragment.FragmentSplash$7 -> com.jeffthefate.dmbquiz.a.as:
    com.jeffthefate.dmbquiz.fragment.FragmentSplash this$0 -> a
    void onClick(android.view.View) -> onClick
com.jeffthefate.dmbquiz.fragment.FragmentSplash$8 -> com.jeffthefate.dmbquiz.a.at:
    com.jeffthefate.dmbquiz.fragment.FragmentSplash this$0 -> a
    void onClick(android.view.View) -> onClick
com.jeffthefate.dmbquiz.fragment.FragmentSplash$9 -> com.jeffthefate.dmbquiz.a.au:
    com.jeffthefate.dmbquiz.fragment.FragmentSplash this$0 -> a
    void onClick(android.view.View) -> onClick
com.jeffthefate.dmbquiz.receiver.ConnectivityReceiver -> com.jeffthefate.dmbquiz.receiver.ConnectivityReceiver:
    boolean wifiEnabled -> a
    android.net.ConnectivityManager connMan -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.jeffthefate.dmbquiz.receiver.ExternalStorageReceiver -> com.jeffthefate.dmbquiz.receiver.ExternalStorageReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.jeffthefate.dmbquiz.receiver.PushReceiver -> com.jeffthefate.dmbquiz.receiver.PushReceiver:
    android.support.v4.app.NotificationCompat$Builder nBuilder -> a
    android.app.NotificationManager nManager -> b
    android.app.Notification notification -> c
    android.content.res.Resources res -> d
    android.content.SharedPreferences sharedPrefs -> e
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.jeffthefate.stacktrace.DefaultExceptionHandler -> com.jeffthefate.a.a:
    java.lang.Thread$UncaughtExceptionHandler defaultExceptionHandler -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.jeffthefate.stacktrace.ExceptionHandler -> com.jeffthefate.a.b:
    java.lang.String TAG -> a
    java.lang.String[] stackTraceFileList -> c
    com.jeffthefate.stacktrace.ExceptionHandler$OnStacktraceListener mCallback -> b
    boolean register(android.app.Application) -> a
    java.lang.String[] searchForStackTraces() -> b
    void submitStackTraces() -> a
com.jeffthefate.stacktrace.ExceptionHandler$1 -> com.jeffthefate.a.c:
    void run() -> run
com.jeffthefate.stacktrace.ExceptionHandler$2 -> com.jeffthefate.a.d:
    boolean accept(java.io.File,java.lang.String) -> accept
com.jeffthefate.stacktrace.ExceptionHandler$OnStacktraceListener -> com.jeffthefate.a.e:
    void onStacktrace(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
com.jeffthefate.stacktrace.G -> com.jeffthefate.a.f:
    java.lang.String FILES_PATH -> a
    java.lang.String APP_VERSION -> b
    java.lang.String APP_PACKAGE -> c
    java.lang.String PHONE_MODEL -> d
    java.lang.String ANDROID_VERSION -> e
    java.lang.String URL -> f
    java.lang.String TraceVersion -> g
com.parse.BackgroundTask -> com.parse.a:
    com.parse.ParseCallback callback -> a
    java.lang.Object result -> b
    com.parse.ParseException exception -> c
    java.lang.Object run() -> a
    java.lang.Void doInBackground$10299ca() -> b
    int executeTask(com.parse.BackgroundTask) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.parse.CountingMultipartEntity -> com.parse.b:
    com.parse.ProgressCallback progressCallback -> a
    void writeTo(java.io.OutputStream) -> writeTo
com.parse.CountingMultipartEntity$CountingOutputStream -> com.parse.c:
    com.parse.ProgressCallback progressCallback -> a
    long uploadedSize -> b
    long totalSize -> c
    boolean hasReportedDone -> d
    void write(byte[],int,int) -> write
    void write(int) -> write
    void notifyCallback() -> a
com.parse.CountingMultipartEntity$CountingOutputStream$1 -> com.parse.d:
    com.parse.CountingMultipartEntity$CountingOutputStream this$1 -> a
    int val$progressToReport -> b
    java.lang.Object run() -> a
com.parse.DeleteCallback -> com.parse.e:
com.parse.FindCallback -> com.parse.f:
    void done(java.util.List,com.parse.ParseException) -> a
    void internalDone(java.lang.Object,com.parse.ParseException) -> a
com.parse.GetCallback -> com.parse.g:
    void done(com.parse.ParseObject,com.parse.ParseException) -> a
    void internalDone(java.lang.Object,com.parse.ParseException) -> a
com.parse.LocalIdManager -> com.parse.h:
    com.parse.LocalIdManager defaultInstance -> a
    java.io.File diskPath -> b
    java.util.Random random -> c
    com.parse.LocalIdManager getDefaultInstance() -> a
    boolean isLocalId(java.lang.String) -> d
    com.parse.LocalIdManager$MapEntry getMapEntry(java.lang.String) -> e
    void putMapEntry(java.lang.String,com.parse.LocalIdManager$MapEntry) -> a
    void removeMapEntry(java.lang.String) -> f
    java.lang.String createLocalId() -> b
    void retainLocalIdOnDisk(java.lang.String) -> a
    void releaseLocalIdOnDisk(java.lang.String) -> b
    java.lang.String getObjectId(java.lang.String) -> c
    void setObjectId(java.lang.String,java.lang.String) -> a
com.parse.LocalIdManager$MapEntry -> com.parse.i:
    java.lang.String objectId -> a
    int retainCount -> b
    com.parse.LocalIdManager this$0 -> c
com.parse.LogInCallback -> com.parse.j:
    void done(com.parse.ParseUser,com.parse.ParseException) -> a
    void internalDone(java.lang.Object,com.parse.ParseException) -> a
com.parse.Parse -> com.parse.k:
    android.content.Context applicationContext -> a
    java.lang.String applicationId -> b
    java.lang.String clientKey -> c
    int logLevel -> h
    int maxParseFileSize -> d
    int maxKeyValueCacheBytes -> e
    int maxKeyValueCacheFiles -> f
    com.parse.ParseCommandCache commandCache -> g
    java.text.DateFormat dateFormat -> i
    void initialize(android.content.Context,java.lang.String,java.lang.String) -> a
    int getLogLevel() -> a
    void log(int,java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void logV(java.lang.String,java.lang.String) -> a
    void logD(java.lang.String,java.lang.String) -> b
    void logI(java.lang.String,java.lang.String) -> c
    void logW(java.lang.String,java.lang.String) -> d
    void logE(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void logE(java.lang.String,java.lang.String) -> e
    void setContextIfNeeded(android.content.Context) -> a
    java.io.File getParseDir() -> b
    void recursiveDelete(java.io.File) -> a
    void checkCacheApplicationId() -> e
    java.io.File getKeyValueCacheDir() -> f
    java.io.File getKeyValueCacheFile(java.lang.String) -> d
    long getKeyValueCacheAge(java.io.File) -> b
    void saveToKeyValueCache(java.lang.String,java.lang.String) -> f
    java.lang.String loadFromKeyValueCache(java.lang.String,long) -> b
    java.lang.Object jsonFromKeyValueCache(java.lang.String,long) -> a
    com.parse.ParseCommandCache getCommandCache() -> c
    void checkInit() -> d
    void checkContext() -> g
    boolean hasPermission(java.lang.String) -> a
    void requirePermission(java.lang.String) -> b
    java.util.List convertArrayToList(org.json.JSONArray) -> a
    java.util.Map convertJSONObjectToMap(org.json.JSONObject) -> b
    java.lang.Object decodeJSONObject(java.lang.Object) -> a
    org.json.JSONObject encodeJSONObject(java.lang.Object,boolean) -> b
    boolean isValidType(java.lang.Object) -> b
    java.lang.Object maybeEncodeJSONObject(java.lang.Object,boolean) -> a
    java.lang.Object maybeReferenceAndEncode(java.lang.Object) -> c
    org.json.JSONObject parseObjectToJSONPointer(com.parse.ParseObject) -> a
    java.util.Date parseDate(java.lang.String) -> c
    java.lang.String encodeDate(java.util.Date) -> a
    org.json.JSONObject dateToObject(java.util.Date) -> b
    java.lang.Iterable keys(org.json.JSONObject) -> a
    boolean isContainerObject(java.lang.Object) -> d
    java.lang.String join(java.util.Collection,java.lang.String) -> a
com.parse.Parse$1 -> com.parse.l:
    void run() -> run
com.parse.Parse$2 -> com.parse.m:
    java.lang.String val$suffix -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.parse.Parse$3 -> com.parse.n:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.parse.Parse$4 -> com.parse.o:
    org.json.JSONObject val$finalObject -> a
    java.util.Iterator iterator() -> iterator
com.parse.ParseACL -> com.parse.p:
    com.parse.ParseACL defaultACL -> d
    boolean defaultACLUsesCurrentUser -> e
    java.lang.ref.WeakReference lastCurrentUser -> f
    com.parse.ParseACL defaultACLWithCurrentUser -> g
    boolean shared -> a
    com.parse.ParseUser unresolvedUser -> b
    org.json.JSONObject permissionsById -> c
    com.parse.ParseACL copy() -> a
    com.parse.ParseACL createACLFromJSONObject(org.json.JSONObject) -> a
    boolean hasUnresolvedUser() -> b
    void setAccess$3b99f9eb(java.lang.String,java.lang.String) -> a
    void setReadAccess$505cbf4b(java.lang.String) -> a
    void setWriteAccess$505cbf4b(java.lang.String) -> b
    void prepareUnresolvedUser(com.parse.ParseUser) -> a
    com.parse.ParseACL getDefaultACL() -> c
com.parse.ParseACL$UserResolutionListener -> com.parse.q:
    java.lang.ref.WeakReference parent -> a
    void done(com.parse.ParseObject,com.parse.ParseException) -> a
com.parse.ParseAddUniqueOperation -> com.parse.r:
    java.util.LinkedHashSet objects -> a
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> a
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> a
    java.lang.Object encode() -> a
com.parse.ParseAnonymousUtils -> com.parse.s:
    com.parse.auth.AnonymousAuthenticationProvider provider -> a
    boolean isLinked(com.parse.ParseUser) -> a
    void logIn(com.parse.LogInCallback) -> a
    void lazyLogIn() -> a
com.parse.ParseBroadcastReceiver -> com.parse.ParseBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.ParseCallback -> com.parse.t:
    void internalDone(java.lang.Object,com.parse.ParseException) -> a
com.parse.ParseCommand -> com.parse.u:
    java.lang.String op -> a
    org.json.JSONObject params -> b
    java.lang.String localId -> c
    org.apache.http.client.HttpClient client -> d
    org.apache.http.client.methods.HttpPost post -> e
    boolean cancelled -> f
    boolean retryEnabled -> g
    int attemptsMade -> h
    long delay -> i
    com.parse.ParseCommand$InternalCallback internalCallback -> j
    int SOCKET_TIMEOUT -> k
    int CONNECTION_TIMEOUT -> l
    int INITIAL_DELAY -> m
    boolean callCallbacksOnFailure -> n
    void put(java.lang.String,java.lang.String) -> a
    void put(java.lang.String,int) -> a
    void put(java.lang.String,org.json.JSONArray) -> a
    void put(java.lang.String,org.json.JSONObject) -> a
    void setOp(java.lang.String) -> a
    java.lang.String getLocalId() -> a
    void setLocalId(java.lang.String) -> b
    org.json.JSONObject toJSONObject() -> b
    java.lang.String getCacheKey() -> c
    void addToStringer(org.json.JSONStringer,java.lang.Object) -> a
    java.lang.Object perform() -> d
    com.parse.ParseException connectionFailed(java.lang.String,java.lang.Exception) -> a
    void preparePost() -> i
    void setInternalCallback(com.parse.ParseCommand$InternalCallback) -> a
    java.lang.Object perform(boolean) -> a
    void setCallCallbacksOnFailure$1385ff() -> e
    org.json.JSONObject sendRequestWithRetries() -> j
    void maybeSetupHttpProxy() -> k
    org.json.JSONObject sendRequest(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost) -> a
    void enableRetrying() -> f
    void getLocalPointersIn(java.lang.Object,java.util.ArrayList) -> a
    void retainLocalIds() -> g
    void releaseLocalIds() -> h
com.parse.ParseCommand$InternalCallback -> com.parse.v:
    void perform(com.parse.ParseCommand,java.lang.Object) -> a
com.parse.ParseCommandCache -> com.parse.w:
    java.io.File cachePath -> a
    int timeoutMaxRetries -> b
    double timeoutRetryWaitSeconds -> c
    int maxCacheSizeBytes -> d
    int filenameCounter -> e
    boolean shouldStop -> f
    boolean connected -> g
    java.util.HashMap commandsInCache -> h
    java.util.HashMap callbacksForCommands -> i
    java.lang.Object lock -> j
    boolean running -> k
    java.lang.Object runningLock -> l
    java.util.logging.Logger log -> m
    com.parse.ParseCommandCache$TestHelper testHelper -> n
    void removeFile(java.io.File) -> a
    void runEventually(com.parse.ParseCommand,com.parse.ParseCallback,com.parse.ParseObject) -> a
    void setConnected(boolean) -> a
    void maybeRunAllCommandsNow(int) -> a
    void access$0(com.parse.ParseCommandCache) -> a
    com.parse.ParseCommandCache$TestHelper access$1(com.parse.ParseCommandCache) -> b
com.parse.ParseCommandCache$1 -> com.parse.x:
    com.parse.ParseCommandCache this$0 -> a
    android.net.ConnectivityManager val$connectivityManager -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.ParseCommandCache$2 -> com.parse.y:
    com.parse.ParseCommandCache this$0 -> a
    void run() -> run
com.parse.ParseCommandCache$3 -> com.parse.z:
    com.parse.ParseCommandCache this$0 -> a
    void perform(com.parse.ParseCommand,java.lang.Object) -> a
com.parse.ParseCommandCache$4 -> com.parse.aa:
    com.parse.ParseCommandCache this$0 -> a
    com.parse.ParseCallback val$callback -> b
    void run() -> run
com.parse.ParseCommandCache$TestHelper -> com.parse.ab:
    java.util.HashMap events -> a
    void notify(int) -> a
com.parse.ParseDeleteOperation -> com.parse.ac:
    com.parse.ParseDeleteOperation defaultInstance -> a
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> a
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> a
    java.lang.Object encode() -> a
com.parse.ParseException -> com.parse.ad:
    int code -> a
    int getCode() -> a
com.parse.ParseFacebookUtils -> com.parse.ae:
    com.parse.auth.FacebookAuthenticationProvider provider -> a
    boolean isInitialized -> b
com.parse.ParseFieldOperation -> com.parse.af:
    java.lang.Object encode() -> a
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> a
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> a
com.parse.ParseFieldOperations -> com.parse.ag:
    java.util.Map opDecoderMap -> a
    com.parse.ParseFieldOperation decode(org.json.JSONObject) -> a
    java.util.ArrayList jsonArrayAsArrayList(org.json.JSONArray) -> a
com.parse.ParseFieldOperations$ParseFieldOperationFactory -> com.parse.ah:
    com.parse.ParseFieldOperation decode$2b0f4984() -> a
com.parse.ParseFile -> com.parse.ai:
    java.lang.String name -> a
    java.lang.String url -> b
    byte[] data -> f
    com.parse.BackgroundTask currentTask -> g
    com.parse.ParseCommand currentCommand -> c
    org.apache.http.client.methods.HttpPost fileUploadPost -> h
    java.util.ArrayList callbacks -> i
    com.parse.ParseFile$ParseFileState state -> d
    com.parse.ParseFile$ParseFileState previousState -> e
    void setState(com.parse.ParseFile$ParseFileState) -> a
    void handleFileUploadResult$99f44(org.json.JSONObject) -> a
com.parse.ParseFile$ParseFileState -> com.parse.aj:
    com.parse.ParseFile$ParseFileState DIRTY -> a
    com.parse.ParseFile$ParseFileState SAVING -> b
    com.parse.ParseFile$ParseFileState AWAITING_FETCH -> c
    com.parse.ParseFile$ParseFileState FETCHING -> d
    com.parse.ParseFile$ParseFileState DATA_AVAILABLE -> e
    com.parse.ParseFile$ParseFileState[] ENUM$VALUES -> f
    com.parse.ParseFile$ParseFileState[] values() -> values
    com.parse.ParseFile$ParseFileState valueOf(java.lang.String) -> valueOf
com.parse.ParseGeoPoint -> com.parse.ak:
    double EARTH_MEAN_RADIUS_KM -> a
    double EARTH_MEAN_RADIUS_MILE -> b
    double latitude -> c
    double longitude -> d
    double getLatitude() -> a
    double getLongitude() -> b
com.parse.ParseInstallation -> com.parse.al:
    com.parse.ParseInstallation currentInstallation -> a
    java.util.List readonlyFields -> f
    com.parse.ParseInstallation getCurrentInstallation() -> a
    java.lang.String getOrCreateCurrentInstallationId() -> w
    java.lang.String getInstallationId() -> b
    void put(java.lang.String,java.lang.Object) -> a
    void save(boolean) -> a
    void saveEventually(com.parse.SaveCallback) -> a
    com.parse.ParseObject fetch() -> c
    void updateTimezone() -> x
    void updateVersionInfo() -> y
    void maybeFlushToDisk(com.parse.ParseInstallation) -> a
com.parse.ParseJSONCacheItem -> com.parse.am:
    org.json.JSONObject json -> b
    java.lang.String hashValue -> a
    java.lang.Object getJSONObject() -> a
com.parse.ParseMulticastDelegate -> com.parse.an:
    java.util.List callbacks -> a
com.parse.ParseObject -> com.parse.ao:
    java.lang.String server -> b
    java.util.Map objectFactories -> a
    java.text.DateFormat impreciseDateFormat -> f
    boolean dirty -> c
    java.lang.String objectId -> d
    java.lang.String localId -> g
    java.lang.String className -> h
    com.parse.ParseMulticastDelegate saveEvent -> i
    java.util.Map serverData -> j
    java.util.LinkedList operationSetQueue -> e
    java.util.Map estimatedData -> k
    java.util.Map dataAvailability -> l
    java.util.Map hashedObjects -> m
    boolean hasBeenFetched -> n
    java.util.Date updatedAt -> o
    java.util.Date createdAt -> p
    java.lang.Boolean isRunning -> q
    com.parse.ParseObject createWithoutData(java.lang.String,java.lang.String) -> a
    void registerFactory(java.lang.String,com.parse.ParseObject$ParseObjectFactory) -> a
    java.lang.String getApplicationId() -> d
    java.util.Date impreciseParseDate(java.lang.String) -> f
    org.json.JSONObject getDiskObject(android.content.Context,java.lang.String) -> a
    org.json.JSONObject getDiskObject(java.io.File) -> a
    void saveDiskObject(android.content.Context,java.lang.String,org.json.JSONObject) -> a
    void saveDiskObject(java.io.File,org.json.JSONObject) -> a
    void deleteDiskObject(android.content.Context,java.lang.String) -> b
    void checkIfRunning() -> e
    void checkIfRunning(boolean) -> b
    void finishedRunning() -> f
    void saveToDisk(android.content.Context,java.lang.String) -> c
    void addToHashedObjects(java.lang.Object) -> a
    com.parse.ParseObject getFromDisk(android.content.Context,java.lang.String) -> d
    java.lang.String getClassName() -> g
    java.util.Date getCreatedAt() -> h
    void clearChanges() -> i
    void copyChangesFrom(com.parse.ParseObject) -> a
    void mergeFromObject(com.parse.ParseObject) -> b
    void mergeAfterFetch(org.json.JSONObject) -> a
    void mergeFromServer(org.json.JSONObject) -> b
    boolean isDirty() -> j
    boolean isDirty(boolean) -> c
    void checkpointMutableContainer(java.lang.Object) -> b
    void checkForChangesToMutableContainers() -> k
    java.lang.String getObjectId() -> l
    java.lang.String getOrCreateLocalId() -> m
    void setObjectIdInternal(java.lang.String) -> g
    void findUnsavedChildren(java.lang.Object,java.util.List) -> a
    com.parse.ParseCommand constructSaveCommand() -> n
    org.json.JSONObject toJSONObjectForDataFile() -> o
    org.json.JSONObject toJSONObjectForSaving() -> p
    void handleSaveResult(java.lang.String,org.json.JSONObject) -> a
    void startSave() -> q
    void validateSave() -> r
    void save() -> s
    void save(boolean) -> a
    void saveInBackground(com.parse.SaveCallback) -> b
    void saveInBackground() -> t
    void saveEventually() -> u
    void saveEventually(com.parse.SaveCallback) -> a
    void deleteEventually() -> v
    void handleFetchResult(org.json.JSONObject) -> c
    com.parse.ParseObject fetch() -> c
    com.parse.ParseObject fetch$7d285028() -> a
    com.parse.ParseCommand constructDeleteCommand$16d177c() -> b
    void collectDirtyChildren(java.lang.Object,java.util.List,java.util.List,java.util.IdentityHashMap,java.util.IdentityHashMap) -> a
    boolean canBeSerializedAsValue(java.lang.Object) -> c
    void deepSave(java.lang.Object) -> d
    java.util.Map currentOperations() -> w
    void applyOperations(java.util.Map,java.util.Map) -> a
    void rebuildEstimatedData() -> x
    void performOperation(java.lang.String,com.parse.ParseFieldOperation) -> a
    void put(java.lang.String,java.lang.Object) -> a
    void addUnique(java.lang.String,java.lang.Object) -> b
    void addAllUnique(java.lang.String,java.util.Collection) -> a
    void removeAll(java.lang.String,java.util.Collection) -> b
    java.lang.String getString(java.lang.String) -> a
    java.lang.Number getNumber(java.lang.String) -> b
    java.util.List getList(java.lang.String) -> c
    boolean getBoolean(java.lang.String) -> d
    com.parse.ParseACL getACL(boolean) -> d
    boolean isDataAvailable(java.lang.String) -> h
    java.lang.Object get(java.lang.String) -> e
    void checkGetAccess(java.lang.String) -> i
    void registerSaveListener(com.parse.GetCallback) -> a
    void unregisterSaveListener(com.parse.GetCallback) -> b
    com.parse.ParseCommand access$0$548cfdb3(com.parse.ParseObject) -> c
com.parse.ParseObject$1 -> com.parse.ap:
    java.lang.Class getExpectedType() -> a
    com.parse.ParseObject getNew$7d285028() -> b
com.parse.ParseObject$2 -> com.parse.aq:
    java.lang.Class getExpectedType() -> a
    com.parse.ParseObject getNew$7d285028() -> b
com.parse.ParseObject$3 -> com.parse.ar:
    java.lang.Class getExpectedType() -> a
    com.parse.ParseObject getNew$7d285028() -> b
com.parse.ParseObject$4 -> com.parse.as:
    com.parse.ParseObject this$0 -> a
    void perform(com.parse.ParseCommand,java.lang.Object) -> a
com.parse.ParseObject$5 -> com.parse.at:
    com.parse.ParseObject this$0 -> a
    java.lang.Object run() -> a
com.parse.ParseObject$6 -> com.parse.au:
    com.parse.ParseObject this$0 -> a
    void perform(com.parse.ParseCommand,java.lang.Object) -> a
com.parse.ParseObject$7 -> com.parse.av:
    com.parse.ParseObject this$0 -> a
    com.parse.DeleteCallback val$callback -> b
    java.lang.Object run() -> a
com.parse.ParseObject$ParseObjectFactory -> com.parse.aw:
    com.parse.ParseObject getNew$7d285028() -> b
    java.lang.Class getExpectedType() -> a
com.parse.ParsePushRouter -> com.parse.ax:
    java.util.regex.Pattern CHANNEL_PATTERN -> i
    java.util.Map channelRoutes -> a
    com.parse.ParsePushRouter$CallbackFactory defaultRoute -> b
    java.util.Set channels -> c
    java.lang.String lastTime -> d
    java.lang.String ignoreAfter -> e
    org.json.JSONObject history -> f
    int maxHistory -> g
    boolean hasLoadedStateFromDisk -> j
    boolean $assertionsDisabled -> h
    void saveEventually(android.content.Context,com.parse.ParseInstallation) -> a
    boolean hasRoutes(android.content.Context) -> a
    void ensureStateIsLoaded(android.content.Context) -> b
    void parseChannelRoutes(org.json.JSONObject) -> a
    void saveStateToDisk(android.content.Context) -> e
    void insertIntoHistory(java.lang.String,java.lang.String) -> a
    boolean addChannelRoute(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.Class) -> a
    boolean addChannelRoute(android.content.Context,java.lang.String,java.lang.Class,int) -> a
    org.json.JSONObject dataForActivity(android.content.Context,java.lang.Class,int) -> b
    void setDefaultRoute(android.content.Context,java.lang.Class,int) -> a
    java.util.Set getSubscriptions(android.content.Context) -> f
    java.lang.String getApplicationId(android.content.Context) -> g
    void routePush(com.parse.PushService,org.json.JSONObject) -> a
    boolean isSubscribedToChannel$5ffc0101(java.lang.String) -> b
    org.json.JSONObject getPushRequestJSON(android.content.Context) -> c
    void access$0(android.content.Context) -> d
    boolean access$1$5ffc0101(java.lang.String) -> a
com.parse.ParsePushRouter$1 -> com.parse.ay:
    android.content.Context val$context -> a
    com.parse.ParseInstallation val$installation -> b
    void done(com.parse.ParseException) -> a
com.parse.ParsePushRouter$1$1 -> com.parse.az:
    com.parse.ParsePushRouter$1 this$1 -> a
    android.content.Context val$context -> b
    java.lang.Object run() -> a
com.parse.ParsePushRouter$2 -> com.parse.ba:
    com.parse.PushService val$service -> a
    org.json.JSONObject val$message -> b
    void internalDone(java.lang.Object,com.parse.ParseException) -> a
com.parse.ParsePushRouter$3 -> com.parse.bb:
    java.lang.String val$channel -> a
    com.parse.PushService val$service -> b
    java.lang.Boolean run() -> b
    java.lang.Object run() -> a
com.parse.ParsePushRouter$CallbackFactory -> com.parse.bc:
    java.lang.Class klass -> a
    org.json.JSONObject contextData -> b
    org.json.JSONObject toJSON() -> a
com.parse.ParseQuery -> com.parse.bd:
    java.lang.String className -> f
    java.util.HashMap where -> a
    java.util.ArrayList include -> g
    int limit -> b
    boolean trace -> h
    int skip -> c
    java.lang.String order -> i
    long queryStart -> j
    long querySent -> k
    long queryReceived -> l
    long objectsParsed -> m
    com.parse.BackgroundTask currentTask -> n
    com.parse.ParseCommand currentCommand -> d
    java.lang.Boolean isRunning -> o
    java.util.HashMap extraOptions -> p
    com.parse.ParseQuery$CachePolicy cachePolicy -> e
    long maxCacheAge -> q
    int[] $SWITCH_TABLE$com$parse$ParseQuery$CachePolicy -> r
    void checkIfRunning(boolean) -> a
    void finishedRunning() -> e
    java.lang.Object maybeEncodeSubQueries(java.lang.Object) -> a
    org.json.JSONObject getFindParams() -> f
    com.parse.ParseCommand makeFindCommand() -> g
    java.util.List convertFindResponse(org.json.JSONObject) -> a
    java.lang.Object runCommandWithPolicy(com.parse.ParseQuery$CommandDelegate,com.parse.ParseQuery$CachePolicy) -> a
    java.util.List findWithCachePolicy(com.parse.ParseQuery$CachePolicy) -> a
    java.util.List find(boolean) -> b
    com.parse.ParseObject getFirst(boolean) -> c
    java.util.List findFromNetwork(boolean) -> d
    java.util.List findFromCache() -> a
    java.lang.Integer countFromCache() -> b
    void findInBackground(com.parse.FindCallback) -> a
    void getFirstInBackground(com.parse.GetCallback) -> a
    com.parse.ParseCommand makeCountCommand() -> c
    int count$1385f2() -> d
    void getInBackground(java.lang.String,com.parse.GetCallback) -> a
    com.parse.ParseQuery whereEqualTo(java.lang.String,java.lang.Object) -> a
    void addCondition(java.lang.String,java.lang.String,java.lang.Object) -> a
    com.parse.ParseQuery whereMatchesKeyInQuery(java.lang.String,java.lang.String,com.parse.ParseQuery) -> a
    com.parse.ParseQuery whereNotContainedIn(java.lang.String,java.util.Collection) -> a
    com.parse.ParseQuery whereExists(java.lang.String) -> a
    com.parse.ParseQuery orderByDescending(java.lang.String) -> b
    void setLimit(int) -> a
    int[] $SWITCH_TABLE$com$parse$ParseQuery$CachePolicy() -> h
com.parse.ParseQuery$1 -> com.parse.be:
    com.parse.ParseQuery this$0 -> a
    java.lang.Object runOnNetwork(boolean) -> a
    java.lang.Object runFromCache() -> a
com.parse.ParseQuery$2 -> com.parse.bf:
    com.parse.ParseQuery this$0 -> a
    java.lang.Object runOnNetwork(boolean) -> a
    java.lang.Object runFromCache() -> a
com.parse.ParseQuery$3 -> com.parse.bg:
    com.parse.ParseQuery this$0 -> a
    com.parse.ParseQuery$CachePolicy val$callbackCachePolicy -> b
    java.lang.Object run() -> a
com.parse.ParseQuery$4 -> com.parse.bh:
    com.parse.ParseQuery this$0 -> a
    com.parse.GetCallback val$callback -> b
    void done(java.util.List,com.parse.ParseException) -> a
com.parse.ParseQuery$6 -> com.parse.bi:
    com.parse.ParseQuery this$0 -> a
    java.lang.String val$finalObjectId -> b
    java.lang.Object run() -> a
com.parse.ParseQuery$CachePolicy -> com.parse.bj:
    com.parse.ParseQuery$CachePolicy IGNORE_CACHE -> a
    com.parse.ParseQuery$CachePolicy CACHE_ONLY -> b
    com.parse.ParseQuery$CachePolicy NETWORK_ONLY -> c
    com.parse.ParseQuery$CachePolicy CACHE_ELSE_NETWORK -> d
    com.parse.ParseQuery$CachePolicy NETWORK_ELSE_CACHE -> e
    com.parse.ParseQuery$CachePolicy CACHE_THEN_NETWORK -> f
    com.parse.ParseQuery$CachePolicy[] ENUM$VALUES -> g
    com.parse.ParseQuery$CachePolicy[] values() -> values
    com.parse.ParseQuery$CachePolicy valueOf(java.lang.String) -> valueOf
com.parse.ParseQuery$CommandDelegate -> com.parse.bk:
    java.lang.Object runOnNetwork(boolean) -> a
    java.lang.Object runFromCache() -> a
com.parse.ParseRelation -> com.parse.bl:
    com.parse.ParseObject parent -> a
    java.lang.String key -> b
    java.lang.String targetClass -> c
com.parse.ParseRemoveOperation -> com.parse.bm:
    java.util.HashSet objects -> a
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> a
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> a
    java.lang.Object encode() -> a
com.parse.ParseRequestRetryer -> com.parse.bn:
    org.apache.http.client.HttpClient client -> b
    org.apache.http.client.methods.HttpUriRequest request -> c
    long delay -> d
    int maxAttempts -> e
    int attemptsMade -> f
    org.apache.http.client.HttpClient testClient -> a
    byte[] sendOneRequest(com.parse.ProgressCallback) -> b
    byte[] go(com.parse.ProgressCallback) -> a
    com.parse.ParseException connectionFailed(java.lang.String,java.lang.Exception) -> a
com.parse.ParseRequestRetryer$1 -> com.parse.bo:
    com.parse.ParseRequestRetryer this$0 -> a
    int val$progressToReport -> b
    java.lang.Object run() -> a
com.parse.ParseRole -> com.parse.bp:
    java.util.regex.Pattern NAME_PATTERN -> a
    void validateSave() -> r
    void put(java.lang.String,java.lang.Object) -> a
com.parse.ParseSetOperation -> com.parse.bq:
    java.lang.Object value -> a
    java.lang.Object encode() -> a
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> a
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> a
com.parse.ParseTwitterUtils -> com.parse.br:
    com.parse.twitter.Twitter twitter -> b
    com.parse.auth.TwitterAuthenticationProvider provider -> c
    boolean isInitialized -> a
    com.parse.auth.TwitterAuthenticationProvider getAuthenticationProvider() -> a
    com.parse.twitter.Twitter getTwitter() -> b
com.parse.ParseUser -> com.parse.bs:
    java.lang.String password -> a
    java.lang.String sessionToken -> f
    org.json.JSONObject authData -> g
    java.util.Set linkedServiceNames -> h
    java.util.Set readOnlyLinkedServiceNames -> i
    boolean isNew -> j
    boolean isLazy -> k
    com.parse.ParseUser currentUser -> l
    java.util.Map authenticationProviders -> m
    boolean autoUserEnabled -> n
    boolean currentUserMatchesDisk -> o
    boolean isCurrentUser -> p
    com.parse.ParseUser logInLazyUser(java.lang.String,org.json.JSONObject) -> b
    boolean isLazy() -> a
    org.json.JSONObject toJSONObjectForSaving() -> p
    org.json.JSONObject toJSONObjectForDataFile() -> o
    void mergeFromObject(com.parse.ParseObject) -> b
    void mergeFromServer(org.json.JSONObject) -> b
    void cleanUpAuthData() -> C
    void setUsername(java.lang.String) -> f
    void setPassword(java.lang.String) -> g
    void put(java.lang.String,java.lang.Object) -> a
    void stripAnonymity() -> D
    java.lang.String getSessionToken() -> b
    void validateSave() -> r
    void save(boolean) -> a
    com.parse.ParseCommand constructSaveCommand() -> n
    com.parse.ParseCommand constructSignUpOrLoginCommand() -> E
    void signUp(boolean) -> c
    void signUpInBackground(com.parse.SignUpCallback) -> a
    com.parse.ParseUser logIn(java.lang.String,java.lang.String) -> b
    void logInInBackground(java.lang.String,java.lang.String,com.parse.LogInCallback) -> a
    com.parse.ParseUser getCurrentUser() -> w
    void saveCurrentUser(com.parse.ParseUser) -> g
    void logOut() -> x
    void requestPasswordReset(java.lang.String) -> h
    void requestPasswordResetInBackground(java.lang.String,com.parse.RequestPasswordResetCallback) -> a
    void checkApplicationContext() -> F
    java.util.Set getLinkedServiceNames() -> y
    void synchronizeAuthData(java.lang.String) -> i
    void registerAuthenticationProvider(com.parse.auth.ParseAuthenticationProvider) -> a
    void logInWith(java.lang.String,com.parse.LogInCallback) -> a
    void logInWith(java.lang.String,org.json.JSONObject,com.parse.LogInCallback) -> a
    void resolveLaziness(boolean) -> d
    boolean isNew() -> z
    com.parse.ParseQuery getQuery() -> A
    com.parse.ParseObject fetch() -> c
    org.json.JSONObject access$2(com.parse.ParseUser) -> a
    java.util.Set access$3(com.parse.ParseUser) -> b
    java.util.Map access$4() -> B
    com.parse.ParseCommand access$5(com.parse.ParseUser) -> c
    void access$6(com.parse.ParseUser,java.lang.String) -> a
    void access$7(com.parse.ParseUser) -> d
    void access$8(com.parse.ParseUser) -> e
    void access$9(com.parse.ParseUser,org.json.JSONObject) -> a
    void access$10$cb30e84(com.parse.ParseUser) -> f
com.parse.ParseUser$1 -> com.parse.bt:
    com.parse.ParseUser this$0 -> a
    void perform(com.parse.ParseCommand,java.lang.Object) -> a
com.parse.ParseUser$10 -> com.parse.bu:
    com.parse.auth.ParseAuthenticationProvider val$authenticator -> a
    com.parse.LogInCallback val$callback -> b
    void onSuccess(org.json.JSONObject) -> a
    void onCancel() -> a
    void onError(java.lang.Throwable) -> a
com.parse.ParseUser$11 -> com.parse.bv:
    com.parse.ParseUser this$0 -> a
    java.lang.String val$authType -> b
    org.json.JSONObject val$authData -> c
    java.lang.Void run() -> b
    java.lang.Object run() -> a
com.parse.ParseUser$2 -> com.parse.bw:
    com.parse.ParseUser this$0 -> a
    java.lang.Object run() -> a
com.parse.ParseUser$3 -> com.parse.bx:
    java.lang.String val$username -> a
    java.lang.String val$password -> b
    java.lang.Object run() -> a
com.parse.ParseUser$4 -> com.parse.by:
    java.lang.String val$email -> a
    java.lang.Object run() -> a
com.parse.ParseUser$5 -> com.parse.bz:
    com.parse.ParseUser this$0 -> a
    java.lang.String val$authType -> b
    com.parse.SaveCallback val$callback -> c
    void done(com.parse.ParseException) -> a
com.parse.ParseUser$6 -> com.parse.ca:
    java.lang.String val$authType -> a
    org.json.JSONObject val$authData -> b
    com.parse.ParseUser run() -> b
    java.lang.Object run() -> a
com.parse.ParseUser$6$1 -> com.parse.cb:
    com.parse.ParseUser$6 this$1 -> a
    com.parse.ParseUser val$user -> b
    void perform(com.parse.ParseCommand,java.lang.Object) -> a
com.parse.ParseUser$7 -> com.parse.cc:
    java.lang.String val$authType -> a
    org.json.JSONObject val$authData -> b
    com.parse.ParseUser run() -> b
    java.lang.Object run() -> a
com.parse.ParseUser$8 -> com.parse.cd:
    com.parse.BackgroundTask val$logInWithTask -> a
    com.parse.LogInCallback val$callback -> b
    void done(com.parse.ParseException) -> a
com.parse.ParseUser$9 -> com.parse.ce:
    com.parse.ParseUser this$0 -> a
    void perform(com.parse.ParseCommand,java.lang.Object) -> a
com.parse.ProgressCallback -> com.parse.cf:
com.parse.PushCallback -> com.parse.cg:
    org.json.JSONObject localData -> a
    org.json.JSONObject pushData -> b
    android.app.Service service -> c
    java.lang.String channel -> d
    void setLocalData(org.json.JSONObject) -> a
    void setPushData(org.json.JSONObject) -> b
    void setService(android.app.Service) -> a
    void setChannel(java.lang.String) -> a
com.parse.PushService -> com.parse.PushService:
    java.lang.String pushServer -> d
    int defaultPushPort -> e
    int pushPort -> f
    java.net.Socket socket -> a
    com.parse.os.ParseAsyncTask task -> g
    int delaySeconds -> h
    com.parse.PushService$ServiceState state -> i
    java.util.Timer keepAliveTimer -> j
    int consecutiveFailures -> b
    java.util.concurrent.Semaphore sleepSemaphore -> c
    void startService(android.content.Context) -> c
    void startServiceIfRequired(android.content.Context) -> a
    void subscribe(android.content.Context,java.lang.String,java.lang.Class) -> a
    void subscribe(android.content.Context,java.lang.String,java.lang.Class,int) -> a
    void setDefaultPushCallback(android.content.Context,java.lang.Class) -> a
    void sleep(int) -> a
    void resetDelay() -> a
    void onCreate() -> onCreate
    boolean sendMessage(java.lang.String) -> a
    boolean sendSubscriptionInformation(android.content.Context) -> d
    void readInBackground(java.io.BufferedReader) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void access$0$20313d65() -> b
    int access$1() -> c
    com.parse.PushService$ServiceState access$2(com.parse.PushService) -> a
    void access$3$20313d65() -> d
    java.lang.String access$4() -> e
    int access$5(com.parse.PushService) -> b
    boolean access$6(android.content.Context) -> b
    void access$7(com.parse.PushService,com.parse.PushService$ServiceState) -> a
    void access$8(com.parse.PushService,java.io.BufferedReader) -> a
com.parse.PushService$1 -> com.parse.ch:
    com.parse.PushService this$0 -> a
    void run() -> run
com.parse.PushService$2 -> com.parse.ci:
    java.io.BufferedReader reader -> b
    com.parse.PushService this$0 -> a
    java.io.BufferedReader val$initialReader -> c
    com.parse.PushService val$finalService -> d
    java.lang.String doInBackground$606be067() -> f
    void onPostExecute(java.lang.Object) -> a
    java.lang.Object doInBackground$42af7916() -> a
com.parse.PushService$ServiceState -> com.parse.cj:
    com.parse.PushService$ServiceState STOPPED -> a
    com.parse.PushService$ServiceState ABORTING -> b
    com.parse.PushService$ServiceState DESTRUCTING -> c
    com.parse.PushService$ServiceState RUNNING -> d
    com.parse.PushService$ServiceState[] ENUM$VALUES -> e
    com.parse.PushService$ServiceState[] values() -> values
    com.parse.PushService$ServiceState valueOf(java.lang.String) -> valueOf
com.parse.RequestPasswordResetCallback -> com.parse.ck:
    void done(com.parse.ParseException) -> a
    void internalDone(java.lang.Object,com.parse.ParseException) -> a
com.parse.SaveCallback -> com.parse.cl:
    void done(com.parse.ParseException) -> a
    void internalDone(java.lang.Object,com.parse.ParseException) -> a
com.parse.SignUpCallback -> com.parse.cm:
    void done(com.parse.ParseException) -> a
    void internalDone(java.lang.Object,com.parse.ParseException) -> a
com.parse.StandardPushCallback -> com.parse.cn:
    int totalNotifications -> e
    boolean disableNotifications -> f
    android.os.Bundle makeBundle() -> a
    void run() -> run
com.parse.auth.AnonymousAuthenticationProvider -> com.parse.a.a:
    void authenticate(com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> a
    org.json.JSONObject getAuthData() -> a
    void deauthenticate() -> b
    boolean restoreAuthentication(org.json.JSONObject) -> a
    java.lang.String getAuthType() -> c
com.parse.auth.FacebookAuthenticationProvider -> com.parse.a.b:
    java.text.DateFormat preciseDateFormat -> a
    com.facebook.android.Facebook facebook -> b
    com.facebook.Session session -> c
    com.facebook.SessionDefaultAudience defaultAudience -> g
    java.lang.String applicationId -> h
    int activityCode -> i
    java.lang.ref.WeakReference baseActivity -> d
    android.content.Context applicationContext -> j
    java.util.Collection permissions -> k
    com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback currentOperationCallback -> e
    java.lang.String userId -> f
    void authenticate(com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> a
    void cancel() -> e
    java.lang.String getAuthType() -> c
    void handleCancel() -> a
    void handleError(java.lang.Throwable) -> a
    void setActivity(android.app.Activity) -> a
    void setActivityCode$13462e() -> d
    void setPermissions(java.util.Collection) -> a
    boolean restoreAuthentication(org.json.JSONObject) -> a
    void deauthenticate() -> b
com.parse.auth.FacebookAuthenticationProvider$2 -> com.parse.a.c:
    com.parse.auth.FacebookAuthenticationProvider this$0 -> a
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> a
com.parse.auth.FacebookAuthenticationProvider$2$1 -> com.parse.a.d:
    com.parse.auth.FacebookAuthenticationProvider$2 this$1 -> a
    void onCompleted(com.facebook.Response) -> a
com.parse.auth.ParseAuthenticationProvider -> com.parse.a.e:
    void authenticate(com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> a
    void deauthenticate() -> b
    boolean restoreAuthentication(org.json.JSONObject) -> a
    java.lang.String getAuthType() -> c
com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback -> com.parse.a.f:
    void onSuccess(org.json.JSONObject) -> a
    void onCancel() -> a
    void onError(java.lang.Throwable) -> a
com.parse.auth.TwitterAuthenticationProvider -> com.parse.a.g:
    java.lang.ref.WeakReference baseContext -> a
    com.parse.twitter.Twitter twitter -> b
    com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback currentOperationCallback -> c
    void authenticate(com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> a
    void deauthenticate() -> b
    java.lang.String getAuthType() -> c
    void handleCancel(com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> b
    boolean restoreAuthentication(org.json.JSONObject) -> a
com.parse.auth.TwitterAuthenticationProvider$1 -> com.parse.a.h:
    com.parse.auth.TwitterAuthenticationProvider this$0 -> a
    com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback val$callback -> b
    void onCancel() -> a
    void onFailure(java.lang.Throwable) -> a
    void onSuccess$5d527811() -> b
com.parse.codec.binary.Base64 -> com.parse.b.a.a:
    byte[] CHUNK_SEPARATOR -> a
    byte[] STANDARD_ENCODE_TABLE -> i
    byte[] URL_SAFE_ENCODE_TABLE -> j
    byte[] DECODE_TABLE -> k
    byte[] encodeTable -> l
    byte[] decodeTable -> m
    byte[] lineSeparator -> n
    int decodeSize -> o
    int encodeSize -> p
    int bitWorkArea -> q
    void encode(byte[],int,int) -> a
    void decode(byte[],int,int) -> b
    java.lang.String encodeBase64String(byte[]) -> a
    byte[] decodeBase64(java.lang.String) -> a
    boolean isInAlphabet(byte) -> a
com.parse.codec.binary.BaseNCodec -> com.parse.b.a.b:
    byte PAD -> b
    int unencodedBlockSize -> a
    int encodedBlockSize -> i
    int lineLength -> c
    int chunkSeparatorLength -> j
    byte[] buffer -> d
    int pos -> e
    int readPos -> k
    boolean eof -> f
    int currentLinePos -> g
    int modulus -> h
    void ensureBufferSize(int) -> a
    int readResults$1cf967b1(byte[],int) -> a
    void reset() -> a
    byte[] decode(byte[]) -> b
    byte[] encode(byte[]) -> c
    void encode(byte[],int,int) -> a
    void decode(byte[],int,int) -> b
    boolean isInAlphabet(byte) -> a
    boolean containsAlphabetOrPad(byte[]) -> d
    long getEncodedLength(byte[]) -> e
com.parse.codec.binary.Hex -> com.parse.b.a.c:
    char[] DIGITS_LOWER -> a
    char[] DIGITS_UPPER -> b
    java.lang.String charsetName -> c
    char[] encodeHex(byte[]) -> b
    java.lang.String encodeHexString(byte[]) -> a
    java.lang.String toString() -> toString
com.parse.codec.binary.StringUtils -> com.parse.b.a.d:
    byte[] getBytesUnchecked(java.lang.String,java.lang.String) -> a
    java.lang.IllegalStateException newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException) -> a
    java.lang.String newString(byte[],java.lang.String) -> a
com.parse.codec.digest.DigestUtils -> com.parse.b.b.a:
    java.security.MessageDigest getDigest(java.lang.String) -> b
    java.lang.String md5Hex(java.lang.String) -> a
com.parse.entity.mime.FormBodyPart -> com.parse.c.a.a:
    java.lang.String name -> c
    com.parse.entity.mime.Header header -> a
    com.parse.entity.mime.content.ContentBody body -> b
    void addField(java.lang.String,java.lang.String) -> a
com.parse.entity.mime.Header -> com.parse.c.a.b:
    java.util.List fields -> a
    java.util.Map fieldMap -> b
    void addField(com.parse.entity.mime.MinimalField) -> a
    com.parse.entity.mime.MinimalField getField(java.lang.String) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.parse.entity.mime.HttpMultipart -> com.parse.c.a.c:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> a
    org.apache.http.util.ByteArrayBuffer CR_LF -> b
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> c
    java.lang.String subType -> d
    java.nio.charset.Charset charset -> e
    java.lang.String boundary -> f
    java.util.List parts -> g
    com.parse.entity.mime.HttpMultipartMode mode -> h
    int[] $SWITCH_TABLE$com$parse$entity$mime$HttpMultipartMode -> i
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> a
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> a
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> a
    void writeBytes(java.lang.String,java.io.OutputStream) -> a
    void writeField(com.parse.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> a
    java.util.List getBodyParts() -> a
    void addBodyPart(com.parse.entity.mime.FormBodyPart) -> a
    void doWriteTo(com.parse.entity.mime.HttpMultipartMode,java.io.OutputStream,boolean) -> a
    void writeTo(java.io.OutputStream) -> a
    long getTotalLength() -> b
    int[] $SWITCH_TABLE$com$parse$entity$mime$HttpMultipartMode() -> c
com.parse.entity.mime.HttpMultipartMode -> com.parse.c.a.d:
    com.parse.entity.mime.HttpMultipartMode STRICT -> a
    com.parse.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> b
    com.parse.entity.mime.HttpMultipartMode[] ENUM$VALUES -> c
    com.parse.entity.mime.HttpMultipartMode[] values() -> values
    com.parse.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
com.parse.entity.mime.MIME -> com.parse.c.a.e:
    java.nio.charset.Charset DEFAULT_CHARSET -> a
com.parse.entity.mime.MinimalField -> com.parse.c.a.f:
    java.lang.String name -> a
    java.lang.String value -> b
    java.lang.String toString() -> toString
com.parse.entity.mime.MultipartEntity -> com.parse.c.a.g:
    char[] MULTIPART_CHARS -> a
    com.parse.entity.mime.HttpMultipart multipart -> b
    org.apache.http.Header contentType -> c
    long length -> d
    boolean dirty -> e
    java.lang.String generateBoundary() -> a
    void addPart(java.lang.String,com.parse.entity.mime.content.ContentBody) -> a
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
com.parse.entity.mime.content.AbstractContentBody -> com.parse.c.a.a.a:
    java.lang.String mimeType -> a
    java.lang.String mediaType -> b
    java.lang.String subType -> c
    java.lang.String getMimeType() -> a
com.parse.entity.mime.content.ByteArrayBody -> com.parse.c.a.a.b:
    byte[] data -> a
    java.lang.String filename -> b
    java.lang.String getFilename() -> b
    void writeTo(java.io.OutputStream) -> a
    java.lang.String getCharset() -> c
    java.lang.String getTransferEncoding() -> d
    long getContentLength() -> e
com.parse.entity.mime.content.ContentBody -> com.parse.c.a.a.c:
    java.lang.String getFilename() -> b
    void writeTo(java.io.OutputStream) -> a
com.parse.entity.mime.content.ContentDescriptor -> com.parse.c.a.a.d:
    java.lang.String getMimeType() -> a
    java.lang.String getCharset() -> c
    java.lang.String getTransferEncoding() -> d
    long getContentLength() -> e
com.parse.entity.mime.content.StringBody -> com.parse.c.a.a.e:
    byte[] content -> a
    java.nio.charset.Charset charset -> b
    void writeTo(java.io.OutputStream) -> a
    java.lang.String getTransferEncoding() -> d
    java.lang.String getCharset() -> c
    long getContentLength() -> e
    java.lang.String getFilename() -> b
com.parse.gdata.PercentEscaper -> com.parse.d.a:
    char[] URI_ESCAPED_SPACE -> a
    char[] UPPER_HEX_DIGITS -> b
    boolean plusForSpace -> c
    boolean[] safeOctets -> d
    boolean[] createSafeOctets(java.lang.String) -> b
    int nextEscapeIndex(java.lang.CharSequence,int,int) -> a
    java.lang.String escape(java.lang.String) -> a
    char[] escape(int) -> a
com.parse.gdata.UnicodeEscaper -> com.parse.d.b:
    java.lang.ThreadLocal DEST_TL -> a
    char[] escape(int) -> a
    int nextEscapeIndex(java.lang.CharSequence,int,int) -> a
    java.lang.String escape(java.lang.String) -> a
    java.lang.String escapeSlow(java.lang.String,int) -> a
    int codePointAt(java.lang.CharSequence,int,int) -> b
    char[] growBuffer(char[],int,int) -> a
com.parse.gdata.UnicodeEscaper$1 -> com.parse.d.c:
    java.lang.Object initialValue() -> initialValue
com.parse.internal.AsyncCallback -> com.parse.e.a:
    void onSuccess$5d527811() -> b
    void onCancel() -> a
    void onFailure(java.lang.Throwable) -> a
com.parse.oauth.OAuth1FlowDialog -> com.parse.f.a:
    android.widget.FrameLayout$LayoutParams FILL -> a
    java.lang.String callbackUrl -> b
    java.lang.String requestUrl -> c
    java.lang.String serviceUrlIdentifier -> d
    com.parse.oauth.OAuth1FlowDialog$FlowResultHandler handler -> e
    android.app.ProgressDialog progressDialog -> f
    android.widget.ImageView closeImage -> g
    android.webkit.WebView webView -> h
    android.widget.FrameLayout content -> i
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.String access$0(com.parse.oauth.OAuth1FlowDialog) -> a
    com.parse.oauth.OAuth1FlowDialog$FlowResultHandler access$1(com.parse.oauth.OAuth1FlowDialog) -> b
    java.lang.String access$2(com.parse.oauth.OAuth1FlowDialog) -> c
    android.app.ProgressDialog access$3(com.parse.oauth.OAuth1FlowDialog) -> d
    android.widget.FrameLayout access$4(com.parse.oauth.OAuth1FlowDialog) -> e
    android.webkit.WebView access$5(com.parse.oauth.OAuth1FlowDialog) -> f
    android.widget.ImageView access$6(com.parse.oauth.OAuth1FlowDialog) -> g
com.parse.oauth.OAuth1FlowDialog$1 -> com.parse.f.b:
    com.parse.oauth.OAuth1FlowDialog this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.parse.oauth.OAuth1FlowDialog$2 -> com.parse.f.c:
    com.parse.oauth.OAuth1FlowDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.parse.oauth.OAuth1FlowDialog$FlowResultHandler -> com.parse.f.d:
    void onCancel() -> a
    void onError(int,java.lang.String,java.lang.String) -> a
    void onComplete(java.lang.String) -> a
com.parse.oauth.OAuth1FlowDialog$OAuth1WebViewClient -> com.parse.f.e:
    com.parse.oauth.OAuth1FlowDialog this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.parse.oauth.OAuth1FlowException -> com.parse.f.f:
    int errorCode -> a
    java.lang.String description -> b
    java.lang.String failingUrl -> c
com.parse.os.ParseAsyncTask -> com.parse.g.a:
    java.util.concurrent.BlockingQueue sWorkQueue -> a
    java.util.concurrent.ThreadFactory sThreadFactory -> b
    java.util.concurrent.ThreadPoolExecutor sExecutor -> c
    com.parse.os.ParseAsyncTask$InternalHandler sHandler -> d
    com.parse.os.ParseAsyncTask$WorkerRunnable mWorker -> e
    java.util.concurrent.FutureTask mFuture -> f
    com.parse.os.ParseAsyncTask$Status mStatus -> g
    int[] $SWITCH_TABLE$com$parse$os$ParseAsyncTask$Status -> h
    java.lang.Object doInBackground$42af7916() -> a
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate$1b4f7664() -> b
    void onCancelled() -> c
    boolean cancel$138603() -> d
    com.parse.os.ParseAsyncTask execute(java.lang.Object[]) -> a
    void access$0(com.parse.os.ParseAsyncTask,java.lang.Object) -> a
    com.parse.os.ParseAsyncTask$InternalHandler access$1() -> e
    int[] $SWITCH_TABLE$com$parse$os$ParseAsyncTask$Status() -> f
com.parse.os.ParseAsyncTask$1 -> com.parse.g.b:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.parse.os.ParseAsyncTask$2 -> com.parse.g.c:
    com.parse.os.ParseAsyncTask this$0 -> a
    java.lang.Object call() -> call
com.parse.os.ParseAsyncTask$3 -> com.parse.g.d:
    com.parse.os.ParseAsyncTask this$0 -> a
    void done() -> done
com.parse.os.ParseAsyncTask$InternalHandler -> com.parse.g.e:
    void handleMessage(android.os.Message) -> handleMessage
com.parse.os.ParseAsyncTask$ParseAsyncTaskResult -> com.parse.g.f:
    com.parse.os.ParseAsyncTask mTask -> a
    java.lang.Object[] mData -> b
com.parse.os.ParseAsyncTask$Status -> com.parse.g.g:
    com.parse.os.ParseAsyncTask$Status PENDING -> a
    com.parse.os.ParseAsyncTask$Status RUNNING -> b
    com.parse.os.ParseAsyncTask$Status FINISHED -> c
    com.parse.os.ParseAsyncTask$Status[] ENUM$VALUES -> d
    com.parse.os.ParseAsyncTask$Status[] values() -> values
    com.parse.os.ParseAsyncTask$Status valueOf(java.lang.String) -> valueOf
com.parse.os.ParseAsyncTask$WorkerRunnable -> com.parse.g.h:
    java.lang.Object[] mParams -> b
com.parse.signpost.AbstractOAuthConsumer -> com.parse.h.a:
    java.lang.String consumerKey -> a
    java.lang.String consumerSecret -> b
    java.lang.String token -> c
    com.parse.signpost.signature.OAuthMessageSigner messageSigner -> d
    com.parse.signpost.signature.SigningStrategy signingStrategy -> e
    com.parse.signpost.http.HttpParameters additionalParameters -> f
    com.parse.signpost.http.HttpParameters requestParameters -> g
    boolean sendEmptyTokens -> h
    void setAdditionalParameters(com.parse.signpost.http.HttpParameters) -> a
    com.parse.signpost.http.HttpRequest sign(com.parse.signpost.http.HttpRequest) -> a
    com.parse.signpost.http.HttpRequest sign(java.lang.Object) -> a
    com.parse.signpost.http.HttpRequest wrap(java.lang.Object) -> b
    void setTokenWithSecret(java.lang.String,java.lang.String) -> a
    java.lang.String getToken() -> a
    java.lang.String getTokenSecret() -> b
    java.lang.String getConsumerKey() -> c
    java.lang.String getConsumerSecret() -> d
com.parse.signpost.AbstractOAuthProvider -> com.parse.h.b:
    java.lang.String requestTokenEndpointUrl -> a
    java.lang.String accessTokenEndpointUrl -> b
    java.lang.String authorizationWebsiteUrl -> c
    com.parse.signpost.http.HttpParameters responseParameters -> d
    java.util.Map defaultHeaders -> e
    boolean isOAuth10a -> f
    com.parse.signpost.OAuthProviderListener listener -> g
    java.lang.String retrieveRequestToken(com.parse.signpost.OAuthConsumer,java.lang.String) -> a
    void retrieveAccessToken(com.parse.signpost.OAuthConsumer,java.lang.String) -> b
    void retrieveToken(com.parse.signpost.OAuthConsumer,java.lang.String,java.lang.String[]) -> a
    com.parse.signpost.http.HttpRequest createRequest(java.lang.String) -> a
    com.parse.signpost.http.HttpResponse sendRequest(com.parse.signpost.http.HttpRequest) -> a
    void closeConnection$723f2095(com.parse.signpost.http.HttpResponse) -> a
    com.parse.signpost.http.HttpParameters getResponseParameters() -> a
com.parse.signpost.OAuth -> com.parse.h.c:
    com.parse.gdata.PercentEscaper percentEncoder -> a
    java.lang.String percentEncode(java.lang.String) -> a
    java.lang.String percentDecode(java.lang.String) -> d
    com.parse.signpost.http.HttpParameters decodeForm(java.lang.String) -> b
    com.parse.signpost.http.HttpParameters decodeForm(java.io.InputStream) -> a
    java.lang.String addQueryParameters(java.lang.String,java.lang.String[]) -> a
    com.parse.signpost.http.HttpParameters oauthHeaderToParamsMap(java.lang.String) -> c
    java.lang.String toHeaderElement(java.lang.String,java.lang.String) -> a
    void debugOut(java.lang.String,java.lang.String) -> b
com.parse.signpost.OAuthConsumer -> com.parse.h.d:
    void setAdditionalParameters(com.parse.signpost.http.HttpParameters) -> a
    com.parse.signpost.http.HttpRequest sign(com.parse.signpost.http.HttpRequest) -> a
    com.parse.signpost.http.HttpRequest sign(java.lang.Object) -> a
    void setTokenWithSecret(java.lang.String,java.lang.String) -> a
    java.lang.String getToken() -> a
    java.lang.String getTokenSecret() -> b
    java.lang.String getConsumerKey() -> c
    java.lang.String getConsumerSecret() -> d
com.parse.signpost.OAuthProvider -> com.parse.h.e:
    java.lang.String retrieveRequestToken(com.parse.signpost.OAuthConsumer,java.lang.String) -> a
    void retrieveAccessToken(com.parse.signpost.OAuthConsumer,java.lang.String) -> b
    com.parse.signpost.http.HttpParameters getResponseParameters() -> a
com.parse.signpost.OAuthProviderListener -> com.parse.h.f:
    boolean onResponseReceived$723f2091() -> a
com.parse.signpost.commonshttp.CommonsHttpOAuthConsumer -> com.parse.h.a.a:
    com.parse.signpost.http.HttpRequest wrap(java.lang.Object) -> b
com.parse.signpost.commonshttp.CommonsHttpOAuthProvider -> com.parse.h.a.b:
    org.apache.http.client.HttpClient httpClient -> a
    com.parse.signpost.http.HttpRequest createRequest(java.lang.String) -> a
    com.parse.signpost.http.HttpResponse sendRequest(com.parse.signpost.http.HttpRequest) -> a
    void closeConnection$723f2095(com.parse.signpost.http.HttpResponse) -> a
com.parse.signpost.commonshttp.HttpRequestAdapter -> com.parse.h.a.c:
    org.apache.http.client.methods.HttpUriRequest request -> a
    org.apache.http.HttpEntity entity -> b
    java.lang.String getMethod() -> a
    java.lang.String getRequestUrl() -> b
    java.lang.String getHeader(java.lang.String) -> a
    void setHeader(java.lang.String,java.lang.String) -> a
    java.lang.String getContentType() -> c
    java.io.InputStream getMessagePayload() -> d
    java.lang.Object unwrap() -> e
com.parse.signpost.commonshttp.HttpResponseAdapter -> com.parse.h.a.d:
    org.apache.http.HttpResponse response -> a
    java.io.InputStream getContent() -> a
    int getStatusCode() -> b
    java.lang.String getReasonPhrase() -> c
    java.lang.Object unwrap() -> d
com.parse.signpost.exception.OAuthCommunicationException -> com.parse.h.b.a:
    java.lang.String responseBody -> a
com.parse.signpost.exception.OAuthException -> com.parse.h.b.b:
com.parse.signpost.exception.OAuthExpectationFailedException -> com.parse.h.b.c:
com.parse.signpost.exception.OAuthMessageSignerException -> com.parse.h.b.d:
com.parse.signpost.exception.OAuthNotAuthorizedException -> com.parse.h.b.e:
    java.lang.String responseBody -> a
com.parse.signpost.http.HttpParameters -> com.parse.h.c.a:
    java.util.TreeMap wrappedMap -> a
    java.lang.String put(java.lang.String,java.lang.String) -> a
    java.lang.String put(java.lang.String,java.lang.String,boolean) -> a
    void putAll(java.util.Map) -> putAll
    void putAll(java.util.Map,boolean) -> a
    void putAll$1407608a(java.lang.String[]) -> a
    java.util.SortedSet get(java.lang.Object) -> d
    java.lang.String getFirst(java.lang.Object) -> a
    java.lang.String getAsQueryString(java.lang.Object) -> b
    java.lang.String getAsHeaderElement(java.lang.String) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
    java.util.SortedSet remove(java.lang.Object) -> c
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.parse.signpost.http.HttpRequest -> com.parse.h.c.b:
    java.lang.String getMethod() -> a
    java.lang.String getRequestUrl() -> b
    void setHeader(java.lang.String,java.lang.String) -> a
    java.lang.String getHeader(java.lang.String) -> a
    java.io.InputStream getMessagePayload() -> d
    java.lang.String getContentType() -> c
    java.lang.Object unwrap() -> e
com.parse.signpost.http.HttpResponse -> com.parse.h.c.c:
    int getStatusCode() -> b
    java.lang.String getReasonPhrase() -> c
    java.io.InputStream getContent() -> a
    java.lang.Object unwrap() -> d
com.parse.signpost.signature.AuthorizationHeaderSigningStrategy -> com.parse.h.d.a:
    java.lang.String writeSignature(java.lang.String,com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> a
com.parse.signpost.signature.HmacSha1MessageSigner -> com.parse.h.d.b:
    java.lang.String getSignatureMethod() -> a
    java.lang.String sign(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> a
com.parse.signpost.signature.OAuthMessageSigner -> com.parse.h.d.c:
    com.parse.codec.binary.Base64 base64 -> a
    java.lang.String consumerSecret -> b
    java.lang.String tokenSecret -> c
    java.lang.String sign(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> a
    java.lang.String getSignatureMethod() -> a
com.parse.signpost.signature.SignatureBaseString -> com.parse.h.d.d:
    com.parse.signpost.http.HttpRequest request -> a
    com.parse.signpost.http.HttpParameters requestParameters -> b
    java.lang.String generate() -> a
    java.lang.String normalizeRequestParameters() -> b
com.parse.signpost.signature.SigningStrategy -> com.parse.h.d.e:
    java.lang.String writeSignature(java.lang.String,com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> a
com.parse.twitter.Twitter -> com.parse.i.a:
    com.parse.signpost.OAuthProvider PROVIDER -> a
    java.lang.String consumerKey -> b
    java.lang.String consumerSecret -> c
    java.lang.String authToken -> d
    java.lang.String authTokenSecret -> e
    java.lang.String userId -> f
    java.lang.String screenName -> g
    java.lang.String getConsumerKey() -> a
    void setConsumerKey(java.lang.String) -> a
    java.lang.String getConsumerSecret() -> b
    void setConsumerSecret(java.lang.String) -> b
    java.lang.String getAuthToken() -> c
    void setAuthToken(java.lang.String) -> c
    java.lang.String getAuthTokenSecret() -> d
    void setAuthTokenSecret(java.lang.String) -> d
    java.lang.String getUserId() -> e
    void setUserId(java.lang.String) -> e
    java.lang.String getScreenName() -> f
    void setScreenName(java.lang.String) -> f
    void authorize(android.content.Context,com.parse.internal.AsyncCallback) -> a
    com.parse.signpost.OAuthProvider access$0() -> g
com.parse.twitter.Twitter$1 -> com.parse.i.b:
    java.lang.Throwable error -> b
    com.parse.twitter.Twitter this$0 -> a
    android.app.ProgressDialog val$progress -> c
    com.parse.internal.AsyncCallback val$callback -> d
    android.content.Context val$context -> e
    com.parse.signpost.OAuthConsumer val$consumer -> f
    void onPreExecute() -> onPreExecute
    java.lang.String doInBackground$606be067() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.parse.twitter.Twitter$1$1 -> com.parse.i.c:
    com.parse.twitter.Twitter$1 this$1 -> a
    com.parse.internal.AsyncCallback val$callback -> b
    com.parse.signpost.OAuthConsumer val$consumer -> c
    android.app.ProgressDialog val$progress -> d
    void onError(int,java.lang.String,java.lang.String) -> a
    void onComplete(java.lang.String) -> a
    void onCancel() -> a
com.parse.twitter.Twitter$1$1$1 -> com.parse.i.d:
    java.lang.Throwable error -> b
    com.parse.twitter.Twitter$1$1 this$2 -> a
    com.parse.signpost.OAuthConsumer val$consumer -> c
    java.lang.String val$verifier -> d
    android.app.ProgressDialog val$progress -> e
    com.parse.internal.AsyncCallback val$callback -> f
    com.parse.signpost.http.HttpParameters doInBackground$49a5fd33() -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
